{"version":3,"sources":["webpack:///pagination.min.js","webpack:///./src/components/pagination/index.js","webpack:///./src/components/pagination/src/maPaginationTpl.html","webpack:///./src/components/pagination/src/directive.js","webpack:///./src/components/pagination/src/name.js"],"names":["webpackJsonp","/6x9","module","exports","__webpack_require__","Object","defineProperty","value","_name","_name2","obj","__esModule","default","angular","config","run","QFx1","t4JU","_interopRequireDefault","maPagination","$timeout","$compile","restrict","replace","template","_maPaginationTpl2","scope","conf","link","element","attrs","getPagination","newValue","oldValue","currentPage","parseInt","totalItems","itemsPerPage","defaultPerPage","numberOfPages","Math","ceil","perPageOptionsStatus","perPageOptionsLength","perPageOptions","length","i","push","text","sort","a","b","selectItem","pageList","pagesLength","_i","offset","_i2","_i3","_i4","_i5","$parent","defaultPerPageOptions","map","item","prevPage","onChange","nextPage","changeCurrentPage","jumpPageNum","changeItemsPerPage","jumpToPage","num","match","jumpPageKeyUp","e","window","event","keyCode","which","$watch","_maPaginationTpl","_jquery","directive","$inject","w0m/"],"mappings":"AAAAA,cAAc,KAERC,OACA,SAAUC,EAAQC,EAASC,GAEjC,YCHAC,QAAAC,eAAAH,EAAA,cACAI,OAAA,GAGA,IAAAC,GAAAJ,EAAA,QAEAK,EAEA,SAAAC,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCE,UAAAF,IAF7EF,EAIAK,SAAAX,OAAAO,EAAA,eAAAK,OAAA,cAA2DC,IAAA,cAE3DX,EAAA,QAEAD,EAAA,WAAAM,EAAA,YDUMO,KACA,SAAUd,EAAQC,GE3BxBD,EAAAC,QAAA,iwCFiCMc,KACA,SAAUf,EAAQC,EAASC,GAEjC,YGtBA,SAAAc,GAAAR,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCE,UAAAF,GAM7E,QAAAS,GAAAC,EAAAC,GACA,OACAC,SAAA,KACAC,SAAA,EACAC,SAAAC,EAAA,WACAC,OACAC,KAAA,aAEAC,KAAA,SAAAF,EAAAG,EAAAC,GA+CA,QAAAC,GAAAC,EAAAC,GAgBA,GAdAN,EAAAO,cACAP,EAAAO,YAAAC,SAAAT,EAAAC,KAAAO,YAAA,KAGAP,EAAAO,cACAP,EAAAO,YAAA,GAIAP,EAAAS,aACAT,EAAAS,WAAAD,SAAAR,EAAAS,WAAA,MAIAT,EAAAS,WAEA,YADAT,EAAAS,WAAA,EAIAT,GAAAU,eACAV,EAAAU,aAAAC,GAGAX,EAAAY,cAAAC,KAAAC,KAAAd,EAAAS,WAAAD,SAAAR,EAAAU,aAAA,KAEAX,EAAAC,KAAAY,cAAA,GAAAb,EAAAC,KAAAO,YAAAR,EAAAC,KAAAY,gBACAb,EAAAC,KAAAO,YAAAR,EAAAC,KAAAY,cAQA,QADAG,GAHAC,EAAAjB,EAAAC,KAAAiB,eAAAC,OAIAC,EAAA,EAAuBA,EAAAH,EAA0BG,IACjDnB,EAAAiB,eAAAE,GAAAvC,OAAAoB,EAAAU,eACAK,GAAA,EAoBA,IAhBAA,GACAf,EAAAiB,eAAAG,MACAC,KAAArB,EAAAU,aAAA,SACA9B,MAAAoB,EAAAU,eAKAV,EAAAiB,eAAAK,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAC,IAEAxB,EAAAyB,aACAzB,EAAAyB,WAAAzB,EAAAiB,eAAA,IAGAlB,EAAA2B,YACA1B,EAAAY,eAAAZ,EAAA2B,YAEA,OAAAC,GAAA,EAA0BA,GAAA5B,EAAAY,cAA0BgB,IACpD7B,EAAA2B,SAAAN,KAAAQ,OAES,CAGT,GAAAC,IAAA7B,EAAA2B,YAAA,IACA,IAAA3B,EAAAO,aAAAsB,EAAA,CAEA,OAAAC,GAAA,EAA6BA,GAAAD,EAAA,EAAmBC,IAChD/B,EAAA2B,SAAAN,KAAAU,EAEA/B,GAAA2B,SAAAN,KAAA,OACArB,EAAA2B,SAAAN,KAAApB,EAAAY,mBACW,IAAAZ,EAAAO,YAAAP,EAAAY,cAAAiB,EAAA,CACX9B,EAAA2B,SAAAN,KAAA,GACArB,EAAA2B,SAAAN,KAAA,MACA,QAAAW,GAAAF,EAAA,EAAsCE,GAAA,EAAUA,IAChDhC,EAAA2B,SAAAN,KAAApB,EAAAY,cAAAmB,EAEAhC,GAAA2B,SAAAN,KAAApB,EAAAY,mBACW,CAEXb,EAAA2B,SAAAN,KAAA,GACArB,EAAA2B,SAAAN,KAAA,MAEA,QAAAY,GAAAnB,KAAAC,KAAAe,EAAA,GAAiDG,GAAA,EAAUA,IAC3DjC,EAAA2B,SAAAN,KAAApB,EAAAO,YAAAyB,EAEAjC,GAAA2B,SAAAN,KAAApB,EAAAO,YACA,QAAA0B,GAAA,EAA6BA,GAAAJ,EAAA,EAAmBI,IAChDlC,EAAA2B,SAAAN,KAAApB,EAAAO,YAAA0B,EAGAlC,GAAA2B,SAAAN,KAAA,OACArB,EAAA2B,SAAAN,KAAApB,EAAAY,gBAIAb,EAAAmC,QAAAlC,OAjJA,GAAAA,GAAAD,EAAAC,KAMAmC,GAAA,gBAGAxB,EAAA,EAGAX,GAAA2B,aAEA3B,EAAA2B,YAAAnB,SAAAR,EAAA2B,YAAA,IAEA3B,EAAA2B,cACA3B,EAAA2B,YAdA,GAkBA3B,EAAA2B,YAAA,OACA3B,EAAA2B,aAAA,IAGA3B,EAAA2B,YAtBA,EA0BA3B,EAAAiB,eAQAjB,EAAAiB,eAAAjB,EAAAiB,eAAAmB,IAAA,SAAAC,GACA,OACAhB,KAAAgB,EAAA,SACAzD,MAAAyD,KAVArC,EAAAiB,eAAAkB,EAAAC,IAAA,SAAAC,GACA,OACAhB,KAAAgB,EAAA,SACAzD,MAAAyD,KAoHAtC,EAAAuC,SAAA,WACAtC,EAAAO,YAAA,IACAP,EAAAO,aAAA,EACAH,IACAJ,EAAAuC,UACAvC,EAAAuC,SAAAvC,EAAAO,YAAAP,EAAAU,gBAMAX,EAAAyC,SAAA,WACAxC,EAAAO,YAAAP,EAAAY,gBACAZ,EAAAO,aAAA,EACAH,IACAJ,EAAAuC,UACAvC,EAAAuC,SAAAvC,EAAAO,YAAAP,EAAAU,gBAMAX,EAAA0C,kBAAA,SAAAJ,GACA,QAAAA,OAAArC,EAAAO,cACAP,EAAAO,YAAA8B,EACArC,EAAA0C,YAAA1C,EAAAO,YACAH,IAEAJ,EAAAuC,UACAvC,EAAAuC,SAAAvC,EAAAO,YAAAP,EAAAU,gBAMAX,EAAA4C,mBAAA,WAEA3C,EAAAO,YAAA,EACAP,EAAA0C,YAAA,EACAtC,IAEAJ,EAAAuC,UACAvC,EAAAuC,SAAAvC,EAAAO,YAAAP,EAAAU,eAKAX,EAAA6C,WAAA,WACA,GAAAC,GAAA7C,EAAA0C,WACAG,GAAAC,MAAA,SACAD,EAAArC,SAAAqC,EAAA,MACAA,GAAA7C,EAAAO,cACAsC,EAAA7C,EAAAY,gBACAiC,EAAA7C,EAAAY,eAIAZ,EAAAO,YAAAsC,EACAzC,IAEAJ,EAAAuC,UACAvC,EAAAuC,SAAAvC,EAAAO,YAAAP,EAAAU,cAEAX,EAAA2C,YAAA,KAKA3C,EAAAgD,cAAA,SAAAC,GAGA,KAFAC,OAAAC,MAAAF,EAAAG,QAAAH,EAAAI,QAGArD,EAAA6C,cAGA7C,EAAAsD,OAAA,2BAAAzE,EAAA0B,GAMAF,MAEAL,EAAAsD,OAAA,2BAAAzE,EAAA0B,IACA1B,OAAA0B,KACAN,EAAAU,aAAA9B,QACAmB,EAAA4C,0BAtQA,GAAA9D,GAAAJ,EAAA,QAEAK,EAAAS,EAAAV,GAEAyE,EAAA7E,EAAA,QAEAqB,EAAAP,EAAA+D,GAEAC,EAAA9E,EAAA,OAEAc,GAAAgE,EAIArE,SAAAX,OAAAO,EAAA,YAAA0E,UAAA,eAAAhE,GAEAA,EAAAiE,SAAA,wBH0SMC,OACA,SAAUnF,EAAQC,EAASC,GAEjC,YI7TAC,QAAAC,eAAAH,EAAA,cACAI,OAAA,IAEAJ,EAAA,8CJoUG","file":"pagination.min.js","sourcesContent":["webpackJsonp([23],{\n\n/***/ \"/6x9\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = __webpack_require__(\"w0m/\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\n__webpack_require__(\"t4JU\");\n\nexports['default'] = _name2['default'];\n\n/***/ }),\n\n/***/ \"QFx1\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"ma-pagination\\\">\\n  <div class=\\\"pagination-item\\\">\\n    <div class=\\\"page-total\\\">共<strong>{{ conf.totalItems }}</strong>条数据</div>\\n  </div>\\n  <div class=\\\"pagination-item\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n    <ul class=\\\"pagination\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n        <li class=\\\"prev\\\" ng-class=\\\"{disabled: conf.currentPage == 1}\\\" ng-click=\\\"prevPage()\\\"><span>&laquo;</span></li>\\n        <li ng-repeat=\\\"item in pageList track by $index\\\" ng-class=\\\"{active: item == conf.currentPage, separate: item == '...'}\\\" ng-click=\\\"changeCurrentPage(item)\\\"><span>{{ item }}</span></li>\\n        <li class=\\\"next\\\" ng-class=\\\"{disabled: conf.currentPage == conf.numberOfPages}\\\" ng-click=\\\"nextPage()\\\"><span>&raquo;</span></li>\\n      </ul>\\n  </div>\\n\\n  <div class=\\\"pagination-item\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n    <div class=\\\"page-jump\\\">\\n      跳转至第<input class=\\\"jump-page-input\\\"\\n            id=\\\"page\\\"\\n            min=\\\"1\\\"\\n            placeholder=\\\"\\\"\\n            ng-model=\\\"conf.jumpPageNum\\\"\\n            ng-init=\\\"1\\\"\\n            ng-keyup=\\\"jumpPageKeyUp($event)\\\">页\\n    </div>\\n  </div>\\n  <div class=\\\"pagination-item\\\">\\n    <div class=\\\"pagination-select\\\">\\n      <ma-select ng-model=\\\"conf.selectItem\\\" ma-data=\\\"conf.perPageOptions\\\"></ma-select>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ \"t4JU\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _name = __webpack_require__(\"w0m/\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _maPaginationTpl = __webpack_require__(\"QFx1\");\n\nvar _maPaginationTpl2 = _interopRequireDefault(_maPaginationTpl);\n\nvar _jquery = __webpack_require__(\"7t+N\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maPagination', maPagination);\n\nmaPagination.$inject = ['$timeout', '$compile'];\n\nfunction maPagination($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    template: _maPaginationTpl2['default'],\n    scope: {\n      conf: '=maConfig'\n    },\n    link: function link(scope, element, attrs) {\n      var conf = scope.conf;\n\n      // 默认分页长度\n      var defaultPagesLength = 5;\n\n      // 默认分页选项可调整每页显示的条数\n      var defaultPerPageOptions = [10, 15, 20, 30, 50];\n\n      // 默认每页的个数\n      var defaultPerPage = 10;\n\n      // 获取分页长度\n      if (conf.pagesLength) {\n        // 判断一下分页长度\n        conf.pagesLength = parseInt(conf.pagesLength, 10);\n\n        if (!conf.pagesLength) {\n          conf.pagesLength = defaultPagesLength;\n        }\n\n        // 分页长度必须为奇数，如果传偶数时，自动处理\n        if (conf.pagesLength % 2 === 0) {\n          conf.pagesLength += 1;\n        }\n      } else {\n        conf.pagesLength = defaultPagesLength;\n      }\n\n      // 分页选项可调整每页显示的条数\n      if (!conf.perPageOptions) {\n        conf.perPageOptions = defaultPerPageOptions.map(function (item) {\n          return {\n            text: item + ' 条 / 页',\n            value: item\n          };\n        });\n      } else {\n        conf.perPageOptions = conf.perPageOptions.map(function (item) {\n          return {\n            text: item + ' 条 / 页',\n            value: item\n          };\n        });\n      }\n\n      // pageList数组\n      function getPagination(newValue, oldValue) {\n        // conf.currentPage\n        if (conf.currentPage) {\n          conf.currentPage = parseInt(scope.conf.currentPage, 10);\n        }\n\n        if (!conf.currentPage) {\n          conf.currentPage = 1;\n        }\n\n        // conf.totalItems\n        if (conf.totalItems) {\n          conf.totalItems = parseInt(conf.totalItems, 10);\n        }\n\n        // conf.totalItems\n        if (!conf.totalItems) {\n          conf.totalItems = 0;\n          return;\n        }\n\n        if (!conf.itemsPerPage) {\n          conf.itemsPerPage = defaultPerPage;\n        }\n        // numberOfPages\n        conf.numberOfPages = Math.ceil(conf.totalItems / parseInt(conf.itemsPerPage, 10));\n        // 如果分页总数>0，并且当前页大于分页总数\n        if (scope.conf.numberOfPages > 0 && scope.conf.currentPage > scope.conf.numberOfPages) {\n          scope.conf.currentPage = scope.conf.numberOfPages;\n        }\n\n        // 如果itemsPerPage在不在perPageOptions数组中，就把itemsPerPage加入这个数组中\n        var perPageOptionsLength = scope.conf.perPageOptions.length;\n\n        // 定义状态\n        var perPageOptionsStatus;\n        for (var i = 0; i < perPageOptionsLength; i++) {\n          if (conf.perPageOptions[i].value == conf.itemsPerPage) {\n            perPageOptionsStatus = true;\n          }\n        }\n        // 如果itemsPerPage在不在perPageOptions数组中，就把itemsPerPage加入这个数组中\n        if (!perPageOptionsStatus) {\n          conf.perPageOptions.push({\n            text: conf.itemsPerPage + ' 条 / 页',\n            value: conf.itemsPerPage\n          });\n        }\n\n        // 对选项进行sort\n        conf.perPageOptions.sort(function (a, b) {\n          return a - b;\n        });\n        if (!conf.selectItem) {\n          conf.selectItem = conf.perPageOptions[0];\n        }\n        // 页码相关\n        scope.pageList = [];\n        if (conf.numberOfPages <= conf.pagesLength) {\n          // 判断总页数如果小于等于分页的长度，若小于则直接显示\n          for (var _i = 1; _i <= conf.numberOfPages; _i++) {\n            scope.pageList.push(_i);\n          }\n        } else {\n          // 总页数大于分页长度（此时分为三种情况：1.左边没有...2.右边没有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (conf.pagesLength - 1) / 2;\n          if (conf.currentPage <= offset) {\n            // 左边没有...\n            for (var _i2 = 1; _i2 <= offset + 1; _i2++) {\n              scope.pageList.push(_i2);\n            }\n            scope.pageList.push('...');\n            scope.pageList.push(conf.numberOfPages);\n          } else if (conf.currentPage > conf.numberOfPages - offset) {\n            scope.pageList.push(1);\n            scope.pageList.push('...');\n            for (var _i3 = offset + 1; _i3 >= 1; _i3--) {\n              scope.pageList.push(conf.numberOfPages - _i3);\n            }\n            scope.pageList.push(conf.numberOfPages);\n          } else {\n            // 最后一种情况，两边都有...\n            scope.pageList.push(1);\n            scope.pageList.push('...');\n\n            for (var _i4 = Math.ceil(offset / 2); _i4 >= 1; _i4--) {\n              scope.pageList.push(conf.currentPage - _i4);\n            }\n            scope.pageList.push(conf.currentPage);\n            for (var _i5 = 1; _i5 <= offset / 2; _i5++) {\n              scope.pageList.push(conf.currentPage + _i5);\n            }\n\n            scope.pageList.push('...');\n            scope.pageList.push(conf.numberOfPages);\n          }\n        }\n\n        scope.$parent.conf = conf;\n      }\n\n      // prevPage\n      scope.prevPage = function () {\n        if (conf.currentPage > 1) {\n          conf.currentPage -= 1;\n          getPagination();\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // nextPage\n      scope.nextPage = function () {\n        if (conf.currentPage < conf.numberOfPages) {\n          conf.currentPage += 1;\n          getPagination();\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // 变更当前页\n      scope.changeCurrentPage = function (item) {\n        if (item !== '...' && item !== conf.currentPage) {\n          conf.currentPage = item;\n          conf.jumpPageNum = conf.currentPage;\n          getPagination();\n          // conf.onChange()函数\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // 修改每页展示的条数\n      scope.changeItemsPerPage = function () {\n        // 一发展示条数变更，当前页将重置为1\n        conf.currentPage = 1;\n        conf.jumpPageNum = 1;\n        getPagination();\n        // conf.onChange()函数\n        if (conf.onChange) {\n          conf.onChange(conf.currentPage, conf.itemsPerPage);\n        }\n      };\n\n      // 跳转页\n      scope.jumpToPage = function () {\n        var num = conf.jumpPageNum;\n        if (num.match(/\\d+/)) {\n          num = parseInt(num, 10);\n          if (num && num != conf.currentPage) {\n            if (num > conf.numberOfPages) {\n              num = conf.numberOfPages;\n            }\n\n            // 跳转\n            conf.currentPage = num;\n            getPagination();\n            // conf.onChange()函数\n            if (conf.onChange) {\n              conf.onChange(conf.currentPage, conf.itemsPerPage);\n            }\n            scope.jumpPageNum = '';\n          }\n        }\n      };\n\n      scope.jumpPageKeyUp = function (e) {\n        var keycode = window.event ? e.keyCode : e.which;\n\n        if (keycode == 13) {\n          scope.jumpToPage();\n        }\n      };\n      scope.$watch('conf.totalItems', function (value, oldValue) {\n        // if (!value || value == oldValue) {\n        //   if (conf.onChange) {\n        //     conf.onChange();\n        //   }\n        // }\n        getPagination();\n      });\n      scope.$watch('conf.selectItem', function (value, oldValue) {\n        if (value || value !== oldValue) {\n          conf.itemsPerPage = value.value;\n          scope.changeItemsPerPage();\n        }\n      });\n      // scope.$watch('conf.currentPage', function(value, oldValue) {\n      //   if (value || conf.currentPage !== conf.jumpPageNum) {\n      //     // conf.jumpPageNum = value;\n      //     scope.changeCurrentPage(value);\n      //   }\n      // });\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"w0m/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.pagination';\n\n/***/ })\n\n},[\"/6x9\"]);\n\n\n// WEBPACK FOOTER //\n// pagination.min.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = require('./src/name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\nrequire('./src/directive.js');\n\nexports['default'] = _name2['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/index.js\n// module id = /6x9\n// module chunks = 23","module.exports = \"<div class=\\\"ma-pagination\\\">\\n  <div class=\\\"pagination-item\\\">\\n    <div class=\\\"page-total\\\">共<strong>{{ conf.totalItems }}</strong>条数据</div>\\n  </div>\\n  <div class=\\\"pagination-item\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n    <ul class=\\\"pagination\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n        <li class=\\\"prev\\\" ng-class=\\\"{disabled: conf.currentPage == 1}\\\" ng-click=\\\"prevPage()\\\"><span>&laquo;</span></li>\\n        <li ng-repeat=\\\"item in pageList track by $index\\\" ng-class=\\\"{active: item == conf.currentPage, separate: item == '...'}\\\" ng-click=\\\"changeCurrentPage(item)\\\"><span>{{ item }}</span></li>\\n        <li class=\\\"next\\\" ng-class=\\\"{disabled: conf.currentPage == conf.numberOfPages}\\\" ng-click=\\\"nextPage()\\\"><span>&raquo;</span></li>\\n      </ul>\\n  </div>\\n\\n  <div class=\\\"pagination-item\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n    <div class=\\\"page-jump\\\">\\n      跳转至第<input class=\\\"jump-page-input\\\"\\n            id=\\\"page\\\"\\n            min=\\\"1\\\"\\n            placeholder=\\\"\\\"\\n            ng-model=\\\"conf.jumpPageNum\\\"\\n            ng-init=\\\"1\\\"\\n            ng-keyup=\\\"jumpPageKeyUp($event)\\\">页\\n    </div>\\n  </div>\\n  <div class=\\\"pagination-item\\\">\\n    <div class=\\\"pagination-select\\\">\\n      <ma-select ng-model=\\\"conf.selectItem\\\" ma-data=\\\"conf.perPageOptions\\\"></ma-select>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/src/maPaginationTpl.html\n// module id = QFx1\n// module chunks = 23","'use strict';\n\nvar _name = require('./name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _maPaginationTpl = require('./maPaginationTpl.html');\n\nvar _maPaginationTpl2 = _interopRequireDefault(_maPaginationTpl);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maPagination', maPagination);\n\nmaPagination.$inject = ['$timeout', '$compile'];\n\nfunction maPagination($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    template: _maPaginationTpl2['default'],\n    scope: {\n      conf: '=maConfig'\n    },\n    link: function link(scope, element, attrs) {\n      var conf = scope.conf;\n\n      // 默认分页长度\n      var defaultPagesLength = 5;\n\n      // 默认分页选项可调整每页显示的条数\n      var defaultPerPageOptions = [10, 15, 20, 30, 50];\n\n      // 默认每页的个数\n      var defaultPerPage = 10;\n\n      // 获取分页长度\n      if (conf.pagesLength) {\n        // 判断一下分页长度\n        conf.pagesLength = parseInt(conf.pagesLength, 10);\n\n        if (!conf.pagesLength) {\n          conf.pagesLength = defaultPagesLength;\n        }\n\n        // 分页长度必须为奇数，如果传偶数时，自动处理\n        if (conf.pagesLength % 2 === 0) {\n          conf.pagesLength += 1;\n        }\n      } else {\n        conf.pagesLength = defaultPagesLength;\n      }\n\n      // 分页选项可调整每页显示的条数\n      if (!conf.perPageOptions) {\n        conf.perPageOptions = defaultPerPageOptions.map(function (item) {\n          return {\n            text: item + ' 条 / 页',\n            value: item\n          };\n        });\n      } else {\n        conf.perPageOptions = conf.perPageOptions.map(function (item) {\n          return {\n            text: item + ' 条 / 页',\n            value: item\n          };\n        });\n      }\n\n      // pageList数组\n      function getPagination(newValue, oldValue) {\n        // conf.currentPage\n        if (conf.currentPage) {\n          conf.currentPage = parseInt(scope.conf.currentPage, 10);\n        }\n\n        if (!conf.currentPage) {\n          conf.currentPage = 1;\n        }\n\n        // conf.totalItems\n        if (conf.totalItems) {\n          conf.totalItems = parseInt(conf.totalItems, 10);\n        }\n\n        // conf.totalItems\n        if (!conf.totalItems) {\n          conf.totalItems = 0;\n          return;\n        }\n\n        if (!conf.itemsPerPage) {\n          conf.itemsPerPage = defaultPerPage;\n        }\n        // numberOfPages\n        conf.numberOfPages = Math.ceil(conf.totalItems / parseInt(conf.itemsPerPage, 10));\n        // 如果分页总数>0，并且当前页大于分页总数\n        if (scope.conf.numberOfPages > 0 && scope.conf.currentPage > scope.conf.numberOfPages) {\n          scope.conf.currentPage = scope.conf.numberOfPages;\n        }\n\n        // 如果itemsPerPage在不在perPageOptions数组中，就把itemsPerPage加入这个数组中\n        var perPageOptionsLength = scope.conf.perPageOptions.length;\n\n        // 定义状态\n        var perPageOptionsStatus;\n        for (var i = 0; i < perPageOptionsLength; i++) {\n          if (conf.perPageOptions[i].value == conf.itemsPerPage) {\n            perPageOptionsStatus = true;\n          }\n        }\n        // 如果itemsPerPage在不在perPageOptions数组中，就把itemsPerPage加入这个数组中\n        if (!perPageOptionsStatus) {\n          conf.perPageOptions.push({\n            text: conf.itemsPerPage + ' 条 / 页',\n            value: conf.itemsPerPage\n          });\n        }\n\n        // 对选项进行sort\n        conf.perPageOptions.sort(function (a, b) {\n          return a - b;\n        });\n        if (!conf.selectItem) {\n          conf.selectItem = conf.perPageOptions[0];\n        }\n        // 页码相关\n        scope.pageList = [];\n        if (conf.numberOfPages <= conf.pagesLength) {\n          // 判断总页数如果小于等于分页的长度，若小于则直接显示\n          for (var _i = 1; _i <= conf.numberOfPages; _i++) {\n            scope.pageList.push(_i);\n          }\n        } else {\n          // 总页数大于分页长度（此时分为三种情况：1.左边没有...2.右边没有...3.左右都有...）\n          // 计算中心偏移量\n          var offset = (conf.pagesLength - 1) / 2;\n          if (conf.currentPage <= offset) {\n            // 左边没有...\n            for (var _i2 = 1; _i2 <= offset + 1; _i2++) {\n              scope.pageList.push(_i2);\n            }\n            scope.pageList.push('...');\n            scope.pageList.push(conf.numberOfPages);\n          } else if (conf.currentPage > conf.numberOfPages - offset) {\n            scope.pageList.push(1);\n            scope.pageList.push('...');\n            for (var _i3 = offset + 1; _i3 >= 1; _i3--) {\n              scope.pageList.push(conf.numberOfPages - _i3);\n            }\n            scope.pageList.push(conf.numberOfPages);\n          } else {\n            // 最后一种情况，两边都有...\n            scope.pageList.push(1);\n            scope.pageList.push('...');\n\n            for (var _i4 = Math.ceil(offset / 2); _i4 >= 1; _i4--) {\n              scope.pageList.push(conf.currentPage - _i4);\n            }\n            scope.pageList.push(conf.currentPage);\n            for (var _i5 = 1; _i5 <= offset / 2; _i5++) {\n              scope.pageList.push(conf.currentPage + _i5);\n            }\n\n            scope.pageList.push('...');\n            scope.pageList.push(conf.numberOfPages);\n          }\n        }\n\n        scope.$parent.conf = conf;\n      }\n\n      // prevPage\n      scope.prevPage = function () {\n        if (conf.currentPage > 1) {\n          conf.currentPage -= 1;\n          getPagination();\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // nextPage\n      scope.nextPage = function () {\n        if (conf.currentPage < conf.numberOfPages) {\n          conf.currentPage += 1;\n          getPagination();\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // 变更当前页\n      scope.changeCurrentPage = function (item) {\n        if (item !== '...' && item !== conf.currentPage) {\n          conf.currentPage = item;\n          conf.jumpPageNum = conf.currentPage;\n          getPagination();\n          // conf.onChange()函数\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // 修改每页展示的条数\n      scope.changeItemsPerPage = function () {\n        // 一发展示条数变更，当前页将重置为1\n        conf.currentPage = 1;\n        conf.jumpPageNum = 1;\n        getPagination();\n        // conf.onChange()函数\n        if (conf.onChange) {\n          conf.onChange(conf.currentPage, conf.itemsPerPage);\n        }\n      };\n\n      // 跳转页\n      scope.jumpToPage = function () {\n        var num = conf.jumpPageNum;\n        if (num.match(/\\d+/)) {\n          num = parseInt(num, 10);\n          if (num && num != conf.currentPage) {\n            if (num > conf.numberOfPages) {\n              num = conf.numberOfPages;\n            }\n\n            // 跳转\n            conf.currentPage = num;\n            getPagination();\n            // conf.onChange()函数\n            if (conf.onChange) {\n              conf.onChange(conf.currentPage, conf.itemsPerPage);\n            }\n            scope.jumpPageNum = '';\n          }\n        }\n      };\n\n      scope.jumpPageKeyUp = function (e) {\n        var keycode = window.event ? e.keyCode : e.which;\n\n        if (keycode == 13) {\n          scope.jumpToPage();\n        }\n      };\n      scope.$watch('conf.totalItems', function (value, oldValue) {\n        // if (!value || value == oldValue) {\n        //   if (conf.onChange) {\n        //     conf.onChange();\n        //   }\n        // }\n        getPagination();\n      });\n      scope.$watch('conf.selectItem', function (value, oldValue) {\n        if (value || value !== oldValue) {\n          conf.itemsPerPage = value.value;\n          scope.changeItemsPerPage();\n        }\n      });\n      // scope.$watch('conf.currentPage', function(value, oldValue) {\n      //   if (value || conf.currentPage !== conf.jumpPageNum) {\n      //     // conf.jumpPageNum = value;\n      //     scope.changeCurrentPage(value);\n      //   }\n      // });\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/src/directive.js\n// module id = t4JU\n// module chunks = 23","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.pagination';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/src/name.js\n// module id = w0m/\n// module chunks = 23"],"sourceRoot":""}