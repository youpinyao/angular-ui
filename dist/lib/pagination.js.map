{"version":3,"sources":["webpack:///./src/components/pagination/index.js","webpack:///./src/components/pagination/src/maPaginationTpl.html","webpack:///./src/components/pagination/src/directive.js","webpack:///./src/components/pagination/src/name.js"],"names":[],"mappings":";;;;;;AAAA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA,sCAAsC,uCAAuC,kBAAkB;;AAE/F,2DAA2D,oBAAoB;;AAE/E;;AAEA,uC;;;;;;;AChBA,6HAA6H,mBAAmB,uMAAuM,gCAAgC,wCAAwC,qFAAqF,0DAA0D,gDAAgD,QAAQ,qDAAqD,iDAAiD,wCAAwC,ulB;;;;;;;;ACApvB;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,kBAAkB;;AAE/F;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA,6BAA6B,mBAAmB;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,C;;;;;;;;ACnRA;;AAEA;AACA;AACA,CAAC;AACD,qD","file":"pagination.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = require('./src/name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\nrequire('./src/directive.js');\n\nexports['default'] = _name2['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/index.js\n// module id = /6x9\n// module chunks = 23","module.exports = \"<div class=\\\"ma-pagination\\\">\\n  <div class=\\\"pagination-item\\\">\\n    <div class=\\\"page-total\\\">共<strong>{{ conf.totalItems }}</strong>条数据</div>\\n  </div>\\n  <div class=\\\"pagination-item\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n    <ul class=\\\"pagination\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n        <li class=\\\"prev\\\" ng-class=\\\"{disabled: conf.currentPage == 1}\\\" ng-click=\\\"prevPage()\\\"><span>&laquo;</span></li>\\n        <li ng-repeat=\\\"item in pageList track by $index\\\" ng-class=\\\"{active: item == conf.currentPage, separate: item == '...'}\\\" ng-click=\\\"changeCurrentPage(item)\\\"><span>{{ item }}</span></li>\\n        <li class=\\\"next\\\" ng-class=\\\"{disabled: conf.currentPage == conf.numberOfPages}\\\" ng-click=\\\"nextPage()\\\"><span>&raquo;</span></li>\\n      </ul>\\n  </div>\\n\\n  <div class=\\\"pagination-item\\\" ng-show=\\\"conf.totalItems > 0\\\">\\n    <div class=\\\"page-jump\\\">\\n      跳转至第<input class=\\\"jump-page-input\\\"\\n            id=\\\"page\\\"\\n            min=\\\"1\\\"\\n            placeholder=\\\"\\\"\\n            ng-model=\\\"conf.jumpPageNum\\\"\\n            ng-init=\\\"1\\\"\\n            ng-keyup=\\\"jumpPageKeyUp($event)\\\">页\\n    </div>\\n  </div>\\n  <div class=\\\"pagination-item\\\">\\n    <div class=\\\"pagination-select\\\">\\n      <ma-select ng-model=\\\"conf.selectItem\\\" ma-data=\\\"conf.perPageOptions\\\"></ma-select>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/src/maPaginationTpl.html\n// module id = QFx1\n// module chunks = 23","'use strict';\n\nvar _name = require('./name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _maPaginationTpl = require('./maPaginationTpl.html');\n\nvar _maPaginationTpl2 = _interopRequireDefault(_maPaginationTpl);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maPagination', maPagination);\n\nmaPagination.$inject = ['$timeout', '$compile'];\n\nfunction maPagination($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    template: _maPaginationTpl2['default'],\n    scope: {\n      conf: '=maConfig'\n    },\n    link: function link(scope, element, attrs) {\n      var conf = scope.conf;\n\n      // 默认分页长度\n      var defaultPagesLength = 5;\n\n      // 默认分页选项可调整每页显示的条数\n      var defaultPerPageOptions = [10, 15, 20, 30, 50];\n\n      // 默认每页的个数\n      var defaultPerPage = 10;\n\n      // 获取分页长度\n      if (conf.pagesLength) {\n        // 判断一下分页长度\n        conf.pagesLength = parseInt(conf.pagesLength, 10);\n\n        if (!conf.pagesLength) {\n          conf.pagesLength = defaultPagesLength;\n        }\n\n        // 分页长度必须为奇数，如果传偶数时，自动处理\n        if (conf.pagesLength % 2 === 0) {\n          conf.pagesLength += 1;\n        }\n      } else {\n        conf.pagesLength = defaultPagesLength;\n      }\n\n      // 分页选项可调整每页显示的条数\n      if (!conf.perPageOptions) {\n        conf.perPageOptions = defaultPerPageOptions.map(function (item) {\n          return {\n            text: item + ' 条 / 页',\n            value: item\n          };\n        });\n      } else {\n        conf.perPageOptions = conf.perPageOptions.map(function (item) {\n          return {\n            text: item + ' 条 / 页',\n            value: item\n          };\n        });\n      }\n\n      // pageList数组\n      function getPagination(newValue, oldValue) {\n        // conf.currentPage\n        if (conf.currentPage) {\n          conf.currentPage = parseInt(scope.conf.currentPage, 10);\n        }\n\n        if (!conf.currentPage) {\n          conf.currentPage = 1;\n        }\n\n        // conf.totalItems\n        if (conf.totalItems) {\n          conf.totalItems = parseInt(conf.totalItems, 10);\n        }\n\n        // conf.totalItems\n        if (!conf.totalItems) {\n          conf.totalItems = 0;\n          return;\n        }\n\n        if (!conf.itemsPerPage) {\n          conf.itemsPerPage = defaultPerPage;\n        }\n        // numberOfPages\n        conf.numberOfPages = Math.ceil(conf.totalItems / parseInt(conf.itemsPerPage, 10));\n        // 如果分页总数>0，并且当前页大于分页总数\n        if (scope.conf.numberOfPages > 0 && scope.conf.currentPage > scope.conf.numberOfPages) {\n          scope.conf.currentPage = scope.conf.numberOfPages;\n        }\n\n        // 如果itemsPerPage在不在perPageOptions数组中，就把itemsPerPage加入这个数组中\n        var perPageOptionsLength = scope.conf.perPageOptions.length;\n\n        // 定义状态\n        var perPageOptionsStatus;\n        for (var i = 0; i < perPageOptionsLength; i++) {\n          if (conf.perPageOptions[i].value == conf.itemsPerPage) {\n            perPageOptionsStatus = true;\n          }\n        }\n        // 如果itemsPerPage在不在perPageOptions数组中，就把itemsPerPage加入这个数组中\n        if (!perPageOptionsStatus) {\n          conf.perPageOptions.push({\n            text: conf.itemsPerPage + ' 条 / 页',\n            value: conf.itemsPerPage\n          });\n        }\n\n        // 对选项进行sort\n        conf.perPageOptions.sort(function (a, b) {\n          return a - b;\n        });\n        if (!conf.selectItem) {\n          conf.selectItem = conf.perPageOptions[0];\n        }\n        // 页码相关\n        scope.pageList = [];\n        if (conf.numberOfPages <= conf.pagesLength) {\n          // 判断总页数如果小于等于分页的长度，若小于则直接显示\n          for (var _i = 1; _i <= conf.numberOfPages; _i++) {\n            scope.pageList.push(_i);\n          }\n        } else {\n          // 总页数大于分页长度（此时分为三种情况：1.左边没有...2.右边没有...3.左右都有...）\n          // 计算中心偏移量\n\n          var offset = (conf.pagesLength + 1) / 2;\n          if (conf.currentPage <= offset) {\n            // 左边没有...\n            for (var _i2 = 1; _i2 <= offset + 1; _i2++) {\n              scope.pageList.push(_i2);\n            }\n            scope.pageList.push('...');\n            scope.pageList.push(conf.numberOfPages);\n          } else if (conf.currentPage > conf.numberOfPages - offset) {\n            scope.pageList.push(1);\n            scope.pageList.push('...');\n            for (var _i3 = offset; _i3 >= 1; _i3--) {\n              scope.pageList.push(conf.numberOfPages - _i3);\n            }\n            scope.pageList.push(conf.numberOfPages);\n          } else {\n            // 最后一种情况，两边都有...\n            scope.pageList.push(1);\n            scope.pageList.push('...');\n            for (var _i4 = Math.floor(offset / 2); _i4 >= 1; _i4--) {\n              scope.pageList.push(conf.currentPage - _i4);\n            }\n            scope.pageList.push(conf.currentPage);\n            for (var _i5 = 1; _i5 <= offset / 2; _i5++) {\n              scope.pageList.push(conf.currentPage + _i5);\n            }\n\n            scope.pageList.push('...');\n            scope.pageList.push(conf.numberOfPages);\n          }\n        }\n\n        scope.$parent.conf = conf;\n      }\n\n      // prevPage\n      scope.prevPage = function () {\n        if (conf.currentPage > 1) {\n          conf.currentPage -= 1;\n          getPagination();\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // nextPage\n      scope.nextPage = function () {\n        if (conf.currentPage < conf.numberOfPages) {\n          conf.currentPage += 1;\n          getPagination();\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // 变更当前页\n      scope.changeCurrentPage = function (item) {\n        if (item !== '...' && item !== conf.currentPage) {\n          conf.currentPage = item;\n          conf.jumpPageNum = conf.currentPage;\n          getPagination();\n          // conf.onChange()函数\n          if (conf.onChange) {\n            conf.onChange(conf.currentPage, conf.itemsPerPage);\n          }\n        }\n      };\n\n      // 修改每页展示的条数\n      scope.changeItemsPerPage = function () {\n        // 一发展示条数变更，当前页将重置为1\n        conf.currentPage = 1;\n        conf.jumpPageNum = 1;\n        getPagination();\n        // conf.onChange()函数\n        if (conf.onChange) {\n          conf.onChange(conf.currentPage, conf.itemsPerPage);\n        }\n      };\n\n      // 跳转页\n      scope.jumpToPage = function () {\n        var num = conf.jumpPageNum;\n        if (num.match(/\\d+/)) {\n          num = parseInt(num, 10);\n          if (num && num != conf.currentPage) {\n            if (num > conf.numberOfPages) {\n              num = conf.numberOfPages;\n            }\n\n            // 跳转\n            conf.currentPage = num;\n            getPagination();\n            // conf.onChange()函数\n            if (conf.onChange) {\n              conf.onChange(conf.currentPage, conf.itemsPerPage);\n            }\n            scope.jumpPageNum = '';\n          }\n        }\n      };\n\n      scope.jumpPageKeyUp = function (e) {\n        var keycode = window.event ? e.keyCode : e.which;\n\n        if (keycode == 13) {\n          scope.jumpToPage();\n        }\n      };\n      scope.$watch('conf.totalItems', function (value, oldValue) {\n        // if (!value || value == oldValue) {\n        //   if (conf.onChange) {\n        //     conf.onChange();\n        //   }\n        // }\n        getPagination();\n      });\n      scope.$watch('conf.selectItem', function (value, oldValue) {\n        if (value || value !== oldValue) {\n          conf.itemsPerPage = value.value;\n          scope.changeItemsPerPage();\n        }\n      });\n      // scope.$watch('conf.currentPage', function(value, oldValue) {\n      //   if (value || conf.currentPage !== conf.jumpPageNum) {\n      //     // conf.jumpPageNum = value;\n      //     scope.changeCurrentPage(value);\n      //   }\n      // });\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/src/directive.js\n// module id = t4JU\n// module chunks = 23","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.pagination';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/pagination/src/name.js\n// module id = w0m/\n// module chunks = 23"],"sourceRoot":""}