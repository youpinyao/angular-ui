{"version":3,"sources":["webpack:///transfer2.min.js","webpack:///./src/components/transfer2/src/maTreeTpl.html","webpack:///./src/components/transfer2/src/maTreeTransfer2Tpl.html","webpack:///./src/components/transfer2/index.js","webpack:///./src/components/transfer2/src/itemTpl.html","webpack:///./src/components/transfer2/src/name.js","webpack:///./src/components/transfer2/src/treeTransfer2Directive.js","webpack:///./src/components/transfer2/src/treeDirective.js"],"names":["webpackJsonp","7fJ5","module","exports","BWKA","e2Tx","__webpack_require__","Object","defineProperty","value","_name","_name2","obj","__esModule","default","angular","config","run","oXUz","pL48","s87f","_interopRequireDefault","maTreeTransfer2","restrict","replace","scope","data","model","maModel","valueKey","textKey","subKey","disabled","leftTitle","rightTitle","template","controllerAs","controller","$scope","$element","$attrs","updateLeftSub","updateSub","updateRightSub","direction","level0Items","_jquery2","find","level0Values","selected","$ctrl","count","len","each","this","hasClass","push","attr","forEach","d","indexOf","isSelectedChangeCheckbox","toRight","$broadcast","isNull","concat","leftSelected","rightSelected","leftCheckbox","rightCheckbox","toLeft","oldModel","getModelWidthChild","newModel","selectWithChild","getSelectedWithChild","getSub","items","length","pushSub","checkSub","sub","dd","newSelected","filterChild","subInLen","s","splice","sameCount","updateLeftRigthData","leftData","extend","rightData","getParentAndChild","get","item","cItem","_parent","searchKey","leftSub","leftButtonDisabled","rightButtonDisabled","rightSub","leftHideItems","rightShowItems","$watch","link","element","attrs","ctrl","maTextKey","maValueKey","$observe","_jquery","_maTreeTransfer2Tpl","_maTreeTransfer2Tpl2","directive","$inject","xEAJ","maTree","showItems","hideItems","expandMatch","doExpand","expands","arrow","contentTarget","itemCls","parent","trigger","unexpand","removeClass","newItems","_from","addClass","updateDisabled","renderContent","_templateWeb2","render","_itemTpl2","bindEvent","html","updateHideShow","parents","getParents","childs","getChilds","isObject","itemValues","getChild","toggleTree","e","target","to","froms","fromChilds","toggleClass","subStore","renderSub","insertAfter","on","checkedSub","checked","checkedParent","updateModel","prop","from","hasParentSelected","$applyAsync","ret","maCheckbox","getSubCheckedCount","total","updateTree","parentItem","treeLevel","_level","tagId","uuid","_to","_sub","it","$on","isEmpty","_templateWeb","_maTreeTpl","_maTreeTpl2","_itemTpl"],"mappings":"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","file":"transfer2.min.js","sourcesContent":["webpackJsonp([17],{\n\n/***/ \"7fJ5\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"ma-tree-select transition-none\\\"\\n  ng-disabled=\\\"disabled\\\">\\n  <div class=\\\"custom-multi-select form-control ui-select-container ui-select-multiple select2 select2-container select2-container-multi ng-isolate-scope ng-not-empty ng-valid custom-tree-select custom-static-select\\\">\\n\\n    <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active select2-display-none\\\">\\n      <div class=\\\"search-container select2-search\\\">\\n        <div class=\\\"ma-input ma-input-search-normal\\\"\\n          ng-disabled=\\\"disabled\\\">\\n          <input type=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            role=\\\"combobox\\\"\\n            aria-expanded=\\\"true\\\"\\n            aria-owns=\\\"ui-select-choices-0\\\"\\n            aria-label=\\\"Select box\\\"\\n            class=\\\"select2-input ui-select-search ng-pristine ng-valid ng-empty ng-touched\\\"\\n            ng-model=\\\"$ctrl.searchKey\\\"\\n            ng-disabled=\\\"disabled\\\"\\n            ondrop=\\\"return false;\\\">\\n        </div>\\n      </div>\\n      <ul tabindex=\\\"-1\\\"\\n        ng-class=\\\"{'has-search': $ctrl.searchKey}\\\"\\n        class=\\\"ui-select-choices ui-select-choices-content select2-results ng-scope\\\">\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ \"BWKA\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"ma-transfer\\\">\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-left-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.leftSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.leftCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{leftTitle || '所有'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-left-tree\\\"\\n      ng-model=\\\"$ctrl.leftSelected\\\"\\n      ma-data=\\\"$ctrl.leftData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-hide-items=\\\"$ctrl.leftHideItems\\\"></ma-tree>\\n  </div>\\n  <div class=\\\"fl ma-transfer-center\\\">\\n    <div class=\\\"mb-20\\\">\\n      <ma-button ng-disabled=\\\"$ctrl.leftButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toRight($event)\\\">\\n        <span>添加</span>\\n        <ma-icon ma-type=\\\"arrowright\\\"></ma-icon>\\n      </ma-button>\\n    </div>\\n    <div>\\n      <ma-button ng-disabled=\\\"$ctrl.rightButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toLeft($event)\\\">\\n        <ma-icon ma-type=\\\"arrowleft\\\"></ma-icon>\\n        <span>删除</span>\\n      </ma-button>\\n    </div>\\n  </div>\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-right-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.rightSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.rightCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{rightTitle || '选中'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-right-tree\\\"\\n      ng-model=\\\"$ctrl.rightSelected\\\"\\n      ma-data=\\\"$ctrl.rightData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-show-items=\\\"$ctrl.rightShowItems\\\"></ma-tree>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ \"e2Tx\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\n__webpack_require__(\"xEAJ\");\n__webpack_require__(\"s87f\");\n\nexports['default'] = _name2['default'];\n\n/***/ }),\n\n/***/ \"oXUz\":\n/***/ (function(module, exports) {\n\nmodule.exports = \" {{each data}}\\n {{if !$value._parent || renderSub}}\\n<li class=\\\"ui-select-choices-row tree-level-{{$value._level}} {{$value._sub ? 'has-sub': ''}}\\\"\\n  data-value=\\\"{{$value[valueKey]}}\\\"\\n  data-from=\\\"{{$value._from}}\\\"\\n  data-to=\\\"{{$value._to}}\\\">\\n  <div class=\\\"select2-result-label ui-select-choices-row-inner\\\">\\n    <div>\\n      {{if $value._sub}}\\n      <i class=\\\"tree-arrow-click\\\">\\n        <i class=\\\"tree-arrow\\\"></i>\\n      </i>\\n      {{/if}}\\n      <!-- <div class=\\\"click-mask\\\"></div> -->\\n      <label class=\\\"ma-checkbox\\\">\\n        <input type=\\\"checkbox\\\" />\\n        <i class=\\\"ma-checkbox-appearance\\\"></i>\\n        <span>{{$value[textKey]}}</span>\\n      </label>\\n    </div>\\n  </div>\\n</li>\\n{{/if}}\\n{{/each}}\\n\";\n\n/***/ }),\n\n/***/ \"pL48\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.transfer2';\n\n/***/ }),\n\n/***/ \"s87f\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _jquery = __webpack_require__(\"7t+N\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTransfer2Tpl = __webpack_require__(\"BWKA\");\n\nvar _maTreeTransfer2Tpl2 = _interopRequireDefault(_maTreeTransfer2Tpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTreeTransfer2', maTreeTransfer2);\n\nmaTreeTransfer2.$inject = [];\n\nfunction maTreeTransfer2() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      maModel: '=maModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      leftTitle: '@maLeftTitle',\n      rightTitle: '@maRightTitle'\n    },\n    template: _maTreeTransfer2Tpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var $ctrl = this;\n\n      $ctrl.searchKey = '';\n\n      $ctrl.leftSub = false;\n      $ctrl.leftCheckbox = false;\n\n      $ctrl.leftButtonDisabled = true;\n      $ctrl.rightButtonDisabled = true;\n\n      $ctrl.rightSub = false;\n      $ctrl.rightCheckbox = false;\n\n      $ctrl.toRight = toRight;\n      $ctrl.toLeft = toLeft;\n\n      $ctrl.leftSelected = [];\n      $ctrl.rightSelected = [];\n\n      $ctrl.leftData = [];\n      $ctrl.rightData = [];\n\n      $ctrl.leftHideItems = [];\n      $ctrl.rightShowItems = [];\n\n      $scope.$watch('data', function (d) {\n        // console.log('transfer2 data', d);\n        updateLeftRigthData();\n      });\n\n      $scope.$watch('model', function (d) {\n        console.log('transfer2 model', d);\n\n        // 过滤掉父子同在\n        var newModel = filterChild();\n\n        if (newModel) {\n          $scope.model = newModel;\n          return;\n        }\n\n        $ctrl.leftHideItems = d || [];\n        $ctrl.rightShowItems = d || [];\n\n        if ($attrs.maModel) {\n          $scope.maModel = getParentAndChild(d);\n        }\n      });\n\n      $scope.$watch('$ctrl.leftCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.leftSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.leftSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.rightCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.rightSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.rightSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.leftSelected', function (d) {\n        $ctrl.leftButtonDisabled = !(d && d.length);\n        updateLeftSub();\n      });\n\n      $scope.$watch('$ctrl.rightSelected', function (d) {\n        $ctrl.rightButtonDisabled = !(d && d.length);\n        updateRightSub();\n      });\n\n      function updateLeftSub() {\n        updateSub('left');\n      }\n\n      function updateRightSub() {\n        updateSub('right');\n      }\n\n      function updateSub(direction) {\n        var level0Items = (0, _jquery2['default'])($element).find('.ma-transfer-' + direction + '-tree.ma-tree-select .tree-level-0');\n        var level0Values = [];\n        var selected = $ctrl[direction + 'Selected'] || [];\n        var count = 0;\n        var len = 0;\n\n        level0Items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            level0Values.push((0, _jquery2['default'])(this).attr('data-value'));\n          }\n        });\n\n        level0Values.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            count++;\n          }\n          len++;\n        });\n\n        if (len > 0) {\n          if (count > 0 && count < len) {\n            $ctrl[direction + 'Sub'] = true;\n          } else {\n            $ctrl[direction + 'Sub'] = false;\n          }\n          if (count === len) {\n            if ($ctrl[direction + 'Checkbox'] === false) {\n              $ctrl[direction + 'Checkbox'] = true;\n              $scope.isSelectedChangeCheckbox = true;\n            }\n          } else if ($ctrl[direction + 'Checkbox'] === true) {\n            $ctrl[direction + 'Checkbox'] = false;\n            $scope.isSelectedChangeCheckbox = true;\n          }\n        }\n      }\n\n      function toRight() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        $scope.model = $scope.model.concat($ctrl.leftSelected);\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function toLeft() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        var oldModel = getModelWidthChild();\n        var newModel = [];\n        var selectWithChild = getSelectedWithChild();\n\n        angular.each(oldModel, function (d) {\n          if (selectWithChild.indexOf(d) === -1) {\n            newModel.push(d);\n          }\n        });\n\n        $scope.model = newModel;\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function getModelWidthChild() {\n        var model = $scope.model || [];\n        var newModel = [];\n\n        function getSub(items) {\n          angular.each(items, function (d) {\n            if (model.indexOf(d[$scope.valueKey] + '') !== -1) {\n              if (d[$scope.subKey] && d[$scope.subKey].length) {\n                pushSub(d[$scope.subKey]);\n              } else {\n                newModel.push(d[$scope.valueKey] + '');\n              }\n            } else {\n              getSub(d[$scope.subKey]);\n            }\n          });\n        }\n\n        function pushSub(items) {\n          angular.each(items, function (d) {\n            if (d[$scope.subKey] && d[$scope.subKey].length) {\n              pushSub(d[$scope.subKey]);\n            } else {\n              newModel.push(d[$scope.valueKey] + '');\n            }\n          });\n        }\n\n        getSub($scope.data);\n\n        return newModel;\n      }\n\n      function getSelectedWithChild() {\n        var newSelected = [];\n        var selected = $ctrl.rightSelected || [];\n\n        function checkSub(items) {\n          angular.each(items, function (d) {\n            var sub = d[$scope.subKey];\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1 && sub && sub.length) {\n              pushSub(sub);\n            } else if (sub && sub.length) {\n              checkSub(sub);\n            }\n          });\n        }\n\n        function pushSub(sub) {\n          angular.each(sub, function (dd) {\n            newSelected.push(dd[$scope.valueKey] + '');\n            if (dd[$scope.subKey] && dd[$scope.subKey].length) {\n              pushSub(dd[$scope.subKey]);\n            }\n          });\n        }\n\n        checkSub($scope.data);\n\n        return selected.concat(newSelected);\n      }\n\n      function filterChild() {\n        var selected = $scope.model || [];\n        var newModel = [];\n        var splicedArray = [];\n        var sameCount = 0;\n\n        function checkSub(items) {\n          var subInLen = 0;\n          angular.forEach(items, function (d) {\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1) {\n              newModel.push(d[$scope.valueKey] + '');\n              subInLen++;\n            } else {\n              var sub = d[$scope.subKey];\n              if (sub && sub.length) {\n                var _subInLen = checkSub(sub);\n                // 如果子全部在，就只存在父级\n                if (_subInLen >= sub.length) {\n                  newModel.push(d[$scope.valueKey] + '');\n                  angular.each(sub, function (s) {\n                    if (newModel.indexOf(s[$scope.valueKey] + '') !== -1) {\n                      newModel.splice(newModel.indexOf(s[$scope.valueKey] + ''), 1);\n                    }\n                  });\n                }\n              }\n            }\n          });\n          return subInLen;\n        }\n\n        checkSub($scope.data);\n\n        newModel.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            sameCount++;\n          }\n        });\n\n        return sameCount < selected.length ? newModel : false;\n      }\n\n      function updateLeftRigthData() {\n        var leftData = _jquery2['default'].extend(true, [], $scope.data);\n        var rightData = _jquery2['default'].extend(true, [], $scope.data);\n\n        $ctrl.leftData = leftData;\n        $ctrl.rightData = rightData;\n      }\n\n      function getParentAndChild(selected) {\n        var newSelected = [];\n\n        function get(items) {\n          angular.each(items, function (item) {\n            if (selected.indexOf(item[$scope.valueKey] + '') !== -1) {\n              var cItem = item;\n\n              newSelected.push(item[$scope.valueKey] + '');\n\n              while (cItem._parent) {\n                if (newSelected.indexOf(cItem._parent[$scope.valueKey] + '') === -1) {\n                  newSelected.push(cItem._parent[$scope.valueKey] + '');\n                }\n                cItem = cItem._parent;\n              }\n\n              getSub(item[$scope.subKey]);\n            }\n\n            if (item[$scope.subKey] && item[$scope.subKey].length) {\n              get(item[$scope.subKey]);\n            }\n          });\n        }\n\n        function getSub(sub) {\n          if (sub && sub.length) {\n            angular.each(sub, function (item) {\n              newSelected.push(item[$scope.valueKey] + '');\n              getSub(item[$scope.subKey]);\n            });\n          }\n        }\n\n        get($ctrl.leftData);\n\n        return newSelected;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"xEAJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _templateWeb = __webpack_require__(\"H+C6\");\n\nvar _templateWeb2 = _interopRequireDefault(_templateWeb);\n\nvar _jquery = __webpack_require__(\"7t+N\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTpl = __webpack_require__(\"7fJ5\");\n\nvar _maTreeTpl2 = _interopRequireDefault(_maTreeTpl);\n\nvar _itemTpl = __webpack_require__(\"oXUz\");\n\nvar _itemTpl2 = _interopRequireDefault(_itemTpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTree', maTree);\n\nmaTree.$inject = [];\n\nfunction maTree() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      showItems: '=maShowItems',\n      hideItems: '=maHideItems'\n    },\n    template: _maTreeTpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function ($scope, $element) {\n      var $ctrl = this;\n      var contentTarget = (0, _jquery2['default'])($element).find('.ui-select-choices-content');\n      var itemCls = '.ui-select-choices-row';\n      var subStore = {};\n\n      $ctrl.searchKey = '';\n\n      $scope.$on('search.clear', function () {\n        $ctrl.searchKey = '';\n      });\n\n      $scope.$watch('$ctrl.searchKey', function (d) {\n        expandMatch(d);\n      });\n      $scope.$watch('disabled', updateDisabled);\n\n      $scope.$watch('data', function (d) {\n        var items = updateTree(d);\n\n        $scope.newItems = items;\n        renderContent(items);\n      });\n\n      $scope.$watch('showItems', function (d) {\n        // console.log('show items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n      $scope.$watch('hideItems', function (d) {\n        // console.log('hide items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n\n      $scope.$watch('model', function (d) {\n        // console.log('tree model', d);\n\n        // 全不选\n        if (angular.isEmpty(d)) {\n          contentTarget.find(itemCls).each(function () {\n            // if (!$(this).hasClass('hidden')) {\n            (0, _jquery2['default'])(this).find('input').prop('checked', false);\n            // }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n        }\n\n        // 全选\n        if (d === 'all') {\n          var newModel = [];\n          contentTarget.find(itemCls).each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', true);\n              newModel.push((0, _jquery2['default'])(this).attr('data-value'));\n            }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n\n          $scope.model = newModel;\n        }\n      });\n\n      function expandMatch(searchKey) {\n        contentTarget.find('.search-match').removeClass('search-match');\n        if (angular.isNull(searchKey)) {\n          return;\n        }\n\n        var expands = [];\n        var unexpand = [];\n\n        $scope.newItems.forEach(function (d) {\n          var item = d;\n\n          if ((item[$scope.textKey] + '').indexOf(searchKey) !== -1 && item._from) {\n            expands.push(item._from);\n            while (item._parent && item._parent._from) {\n              expands.push(item._parent._from);\n              item = item._parent;\n            }\n          }\n        });\n\n        function doExpand() {\n          expands.forEach(function (d) {\n            var arrow = contentTarget.find(itemCls + '[data-to=\"' + d + '\"] .tree-arrow-click');\n\n            if (arrow.length) {\n              if (!arrow.parent().hasClass('tree-open')) {\n                arrow.trigger('click');\n              }\n            } else {\n              unexpand.push(d);\n            }\n          });\n          expands = unexpand;\n          unexpand = [];\n          if (expands.length) {\n            doExpand();\n          }\n        }\n\n        doExpand();\n\n        // 设置match class\n        $scope.newItems.forEach(function (d) {\n          if ((d[$scope.textKey] + '').indexOf(searchKey) !== -1) {\n            contentTarget.find(itemCls + '[data-value=\"' + (d[$scope.valueKey] + '') + '\"]').addClass('search-match');\n          }\n        });\n      }\n\n      function updateDisabled() {\n        if ($scope.disabled) {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', true);\n        } else {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', false);\n        }\n      }\n\n      function renderContent(data) {\n        var items = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n          data: data,\n          textKey: $scope.textKey,\n          valueKey: $scope.valueKey\n        }));\n\n        bindEvent(items);\n\n        contentTarget.html(items);\n\n        updateHideShow();\n      }\n\n      function updateHideShow() {\n        // 如果有要隐藏的隐藏\n        if ($scope.hideItems) {\n          var parents = getParents($scope.hideItems);\n          var childs = getChilds($scope.hideItems);\n\n          contentTarget.find(itemCls).removeClass('hidden');\n          $scope.hideItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] + '' : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n            item.addClass('hidden');\n          });\n          childs.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').addClass('hidden');\n          });\n          parents.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n\n        // 如果有要现实的显示\n        if ($scope.showItems) {\n          var _parents = getParents($scope.showItems);\n          var _childs = getChilds($scope.showItems);\n\n          contentTarget.find(itemCls).addClass('hidden');\n\n          $scope.showItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] + '' : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n\n            item.removeClass('hidden');\n          });\n\n          _parents.concat(_childs).forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n      }\n\n      function getChilds(itemValues) {\n        var childs = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            getChild(d);\n          }\n        });\n\n        function getChild(item) {\n          var sub = item[$scope.subKey];\n          if (sub && sub.length) {\n            sub.forEach(function (d) {\n              childs.push(d[$scope.valueKey] + '');\n              getChild(d);\n            });\n          }\n        }\n        return childs;\n      }\n\n      function getParents(itemValues) {\n        var parents = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            var item = d;\n            while (item._parent) {\n              parents.push(item._parent[$scope.valueKey] + '');\n              item = item._parent;\n            }\n          }\n        });\n        return parents;\n      }\n\n      function toggleTree(e) {\n        if ($scope.disabled) {\n          return;\n        }\n\n        var target = (0, _jquery2['default'])(e.target);\n        var item = target.parents(itemCls);\n        var to = item.attr('data-to');\n        var froms = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n        var fromChilds = contentTarget.find(itemCls + '[data-from*=\"' + to + '_\"]');\n\n        if (!froms.length) {\n          froms = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n            data: subStore[to],\n            textKey: $scope.textKey,\n            valueKey: $scope.valueKey,\n            renderSub: true\n          }));\n          froms.insertAfter(item);\n          bindEvent(froms, item);\n          updateHideShow();\n        } else {\n          froms.toggleClass('hide');\n          fromChilds.toggleClass('child-hide');\n        }\n        target.parent().toggleClass('tree-open');\n      }\n\n      function bindEvent(items, parent) {\n        items.find('.tree-arrow-click').on('click', toggleTree);\n        items.find('input[type=\"checkbox\"]').on('change', function (e) {\n          checkedSub((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-to'), e.target.checked);\n          checkedParent((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-from'), e.target.checked);\n          updateModel();\n        });\n        if (parent) {\n          checkedSub(parent.attr('data-to'), parent.find('input').prop('checked'));\n        }\n        updateDisabled();\n      }\n\n      function updateModel() {\n        // console.log('update model');\n        var newModel = [];\n        var selectedes = contentTarget.find('input:checked');\n\n        selectedes.each(function () {\n          var item = (0, _jquery2['default'])(this).parents(itemCls);\n          var from = item.attr('data-from');\n          var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var parentValue = parent.attr('data-value');\n\n          if (hasParentSelected(item)) {\n            return true;\n          }\n          newModel.push(item.attr('data-value'));\n          return true;\n        });\n\n        $scope.$applyAsync(function () {\n          $scope.model = newModel;\n        });\n      }\n\n      function hasParentSelected(item) {\n        var from = item.attr('data-from');\n        var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n        var ret = false;\n\n        ret = !!(from && parent.length && parent.find('input').prop('checked'));\n\n        if (ret === false && from && parent.attr('data-from')) {\n          ret = hasParentSelected(parent);\n        }\n\n        return ret;\n      }\n\n      function checkedSub(to, checked) {\n        if (to) {\n          var items = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n          var item = contentTarget.find(itemCls + '[data-to=\"' + to + '\"]');\n\n          items.each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', checked);\n              checkedSub((0, _jquery2['default'])(this).attr('data-to'), checked);\n            }\n          });\n          item.find('.ma-checkbox').removeClass('has-sub');\n        }\n      }\n\n      function checkedParent(from) {\n        if (from) {\n          var items = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var maCheckbox = items.find('.ma-checkbox');\n          var data = getSubCheckedCount(from);\n\n          maCheckbox.removeClass('has-sub');\n          if (data.count <= 0) {\n            items.find('input').prop('checked', false);\n            if (data.sub) {\n              maCheckbox.addClass('has-sub');\n            }\n          } else if (data.count >= data.total) {\n            items.find('input').prop('checked', true);\n          } else {\n            items.find('input').prop('checked', false);\n            maCheckbox.addClass('has-sub');\n          }\n\n          checkedParent(items.attr('data-from'));\n        }\n      }\n\n      function getSubCheckedCount(from) {\n        var items = contentTarget.find(itemCls + '[data-from=\"' + from + '\"]');\n        var count = 0;\n        var total = 0;\n        var sub = 0;\n\n        items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            if ((0, _jquery2['default'])(this).find('input').prop('checked')) {\n              count++;\n            }\n            if ((0, _jquery2['default'])(this).find('.ma-checkbox').hasClass('has-sub')) {\n              sub++;\n            }\n            total++;\n          }\n        });\n        return {\n          total: total,\n          count: count,\n          sub: sub\n        };\n      }\n\n      function updateTree(items) {\n        var newItems = [];\n        var subKey = $scope.subKey;\n\n        subStore = {};\n\n        function getSub(items, parentItem, treeLevel) {\n          angular.each(items, function (d) {\n            var item = d;\n\n            newItems.push(item);\n\n            item._level = treeLevel;\n\n            if (item[subKey] && item[subKey].length) {\n              item.tagId = parentItem ? parentItem.tagId + '_' + angular.uuid() : 'tag_' + angular.uuid();\n              item._to = item.tagId;\n              item._sub = true;\n              subStore[item.tagId] = item[subKey];\n              angular.forEach(item[subKey], function (it) {\n                it._parent = item;\n                it._from = item.tagId;\n              });\n              getSub(item[subKey], item, treeLevel + 1);\n            }\n          });\n        }\n        getSub(items, null, 0);\n        return newItems;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n/***/ })\n\n},[\"e2Tx\"]);\n\n\n// WEBPACK FOOTER //\n// transfer2.min.js","module.exports = \"<div class=\\\"ma-tree-select transition-none\\\"\\n  ng-disabled=\\\"disabled\\\">\\n  <div class=\\\"custom-multi-select form-control ui-select-container ui-select-multiple select2 select2-container select2-container-multi ng-isolate-scope ng-not-empty ng-valid custom-tree-select custom-static-select\\\">\\n\\n    <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active select2-display-none\\\">\\n      <div class=\\\"search-container select2-search\\\">\\n        <div class=\\\"ma-input ma-input-search-normal\\\"\\n          ng-disabled=\\\"disabled\\\">\\n          <input type=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            role=\\\"combobox\\\"\\n            aria-expanded=\\\"true\\\"\\n            aria-owns=\\\"ui-select-choices-0\\\"\\n            aria-label=\\\"Select box\\\"\\n            class=\\\"select2-input ui-select-search ng-pristine ng-valid ng-empty ng-touched\\\"\\n            ng-model=\\\"$ctrl.searchKey\\\"\\n            ng-disabled=\\\"disabled\\\"\\n            ondrop=\\\"return false;\\\">\\n        </div>\\n      </div>\\n      <ul tabindex=\\\"-1\\\"\\n        ng-class=\\\"{'has-search': $ctrl.searchKey}\\\"\\n        class=\\\"ui-select-choices ui-select-choices-content select2-results ng-scope\\\">\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/maTreeTpl.html\n// module id = 7fJ5\n// module chunks = 17","module.exports = \"<div class=\\\"ma-transfer\\\">\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-left-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.leftSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.leftCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{leftTitle || '所有'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-left-tree\\\"\\n      ng-model=\\\"$ctrl.leftSelected\\\"\\n      ma-data=\\\"$ctrl.leftData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-hide-items=\\\"$ctrl.leftHideItems\\\"></ma-tree>\\n  </div>\\n  <div class=\\\"fl ma-transfer-center\\\">\\n    <div class=\\\"mb-20\\\">\\n      <ma-button ng-disabled=\\\"$ctrl.leftButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toRight($event)\\\">\\n        <span>添加</span>\\n        <ma-icon ma-type=\\\"arrowright\\\"></ma-icon>\\n      </ma-button>\\n    </div>\\n    <div>\\n      <ma-button ng-disabled=\\\"$ctrl.rightButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toLeft($event)\\\">\\n        <ma-icon ma-type=\\\"arrowleft\\\"></ma-icon>\\n        <span>删除</span>\\n      </ma-button>\\n    </div>\\n  </div>\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-right-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.rightSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.rightCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{rightTitle || '选中'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-right-tree\\\"\\n      ng-model=\\\"$ctrl.rightSelected\\\"\\n      ma-data=\\\"$ctrl.rightData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-show-items=\\\"$ctrl.rightShowItems\\\"></ma-tree>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/maTreeTransfer2Tpl.html\n// module id = BWKA\n// module chunks = 17","import moduleName from './src/name.js';\n\nangular.module(moduleName, []).config(function () {}).run(function () {});\n\nrequire('./src/treeDirective.js');\nrequire('./src/treeTransfer2Directive.js');\n\nexport default moduleName;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/transfer2/index.js","module.exports = \" {{each data}}\\n {{if !$value._parent || renderSub}}\\n<li class=\\\"ui-select-choices-row tree-level-{{$value._level}} {{$value._sub ? 'has-sub': ''}}\\\"\\n  data-value=\\\"{{$value[valueKey]}}\\\"\\n  data-from=\\\"{{$value._from}}\\\"\\n  data-to=\\\"{{$value._to}}\\\">\\n  <div class=\\\"select2-result-label ui-select-choices-row-inner\\\">\\n    <div>\\n      {{if $value._sub}}\\n      <i class=\\\"tree-arrow-click\\\">\\n        <i class=\\\"tree-arrow\\\"></i>\\n      </i>\\n      {{/if}}\\n      <!-- <div class=\\\"click-mask\\\"></div> -->\\n      <label class=\\\"ma-checkbox\\\">\\n        <input type=\\\"checkbox\\\" />\\n        <i class=\\\"ma-checkbox-appearance\\\"></i>\\n        <span>{{$value[textKey]}}</span>\\n      </label>\\n    </div>\\n  </div>\\n</li>\\n{{/if}}\\n{{/each}}\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/itemTpl.html\n// module id = oXUz\n// module chunks = 17","export default 'meetyou.angular.ui.transfer2';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/transfer2/src/name.js","import moduleName from './name.js';\nimport $ from 'jquery';\nimport maTreeTransfer2Tpl from './maTreeTransfer2Tpl.html';\n\nangular.module(moduleName)\n  .directive('maTreeTransfer2', maTreeTransfer2);\n\nmaTreeTransfer2.$inject = [];\n\nfunction maTreeTransfer2() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      maModel: '=maModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      leftTitle: '@maLeftTitle',\n      rightTitle: '@maRightTitle',\n    },\n    template: maTreeTransfer2Tpl,\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', '$attrs', function($scope, $element, $attrs) {\n      const $ctrl = this;\n\n      $ctrl.searchKey = '';\n\n      $ctrl.leftSub = false;\n      $ctrl.leftCheckbox = false;\n\n      $ctrl.leftButtonDisabled = true;\n      $ctrl.rightButtonDisabled = true;\n\n      $ctrl.rightSub = false;\n      $ctrl.rightCheckbox = false;\n\n      $ctrl.toRight = toRight;\n      $ctrl.toLeft = toLeft;\n\n      $ctrl.leftSelected = [];\n      $ctrl.rightSelected = [];\n\n      $ctrl.leftData = [];\n      $ctrl.rightData = [];\n\n      $ctrl.leftHideItems = [];\n      $ctrl.rightShowItems = [];\n\n      $scope.$watch('data', (d) => {\n        // console.log('transfer2 data', d);\n        updateLeftRigthData();\n      });\n\n      $scope.$watch('model', (d) => {\n        console.log('transfer2 model', d);\n\n        // 过滤掉父子同在\n        const newModel = filterChild();\n\n        if (newModel) {\n          $scope.model = newModel;\n          return;\n        }\n\n        $ctrl.leftHideItems = d || [];\n        $ctrl.rightShowItems = d || [];\n\n        if ($attrs.maModel) {\n          $scope.maModel = getParentAndChild(d);\n        }\n      });\n\n      $scope.$watch('$ctrl.leftCheckbox', d => {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.leftSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.leftSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.rightCheckbox', d => {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.rightSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.rightSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.leftSelected', d => {\n        $ctrl.leftButtonDisabled = !(d && d.length);\n        updateLeftSub();\n      });\n\n      $scope.$watch('$ctrl.rightSelected', d => {\n        $ctrl.rightButtonDisabled = !(d && d.length);\n        updateRightSub();\n      });\n\n      function updateLeftSub() {\n        updateSub('left');\n      }\n\n      function updateRightSub() {\n        updateSub('right');\n      }\n\n      function updateSub(direction) {\n        const level0Items = $($element).find(\n          `.ma-transfer-${direction}-tree.ma-tree-select .tree-level-0`);\n        const level0Values = [];\n        const selected = $ctrl[`${direction}Selected`] || [];\n        let count = 0;\n        let len = 0;\n\n        level0Items.each(function() {\n          if (!$(this).hasClass('hidden')) {\n            level0Values.push($(this).attr('data-value'));\n          }\n        });\n\n        level0Values.forEach(d => {\n          if (selected.indexOf(d) !== -1) {\n            count++;\n          }\n          len++;\n        });\n\n        if (len > 0) {\n          if (count > 0 && count < len) {\n            $ctrl[`${direction}Sub`] = true;\n          } else {\n            $ctrl[`${direction}Sub`] = false;\n          }\n          if (count === len) {\n            if ($ctrl[`${direction}Checkbox`] === false) {\n              $ctrl[`${direction}Checkbox`] = true;\n              $scope.isSelectedChangeCheckbox = true;\n            }\n          } else if ($ctrl[`${direction}Checkbox`] === true) {\n            $ctrl[`${direction}Checkbox`] = false;\n            $scope.isSelectedChangeCheckbox = true;\n          }\n        }\n      }\n\n      function toRight() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        $scope.model = $scope.model.concat($ctrl.leftSelected);\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function toLeft() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        const oldModel = getModelWidthChild();\n        const newModel = [];\n        const selectWithChild = getSelectedWithChild();\n\n        angular.each(oldModel, d => {\n          if (selectWithChild.indexOf(d) === -1) {\n            newModel.push(d);\n          }\n        });\n\n        $scope.model = newModel;\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function getModelWidthChild() {\n        const model = $scope.model || [];\n        const newModel = [];\n\n        function getSub(items) {\n          angular.each(items, d => {\n            if (model.indexOf(d[$scope.valueKey] + '') !== -1) {\n              if (d[$scope.subKey] && d[$scope.subKey].length) {\n                pushSub(d[$scope.subKey]);\n              } else {\n                newModel.push(d[$scope.valueKey] + '');\n              }\n            } else {\n              getSub(d[$scope.subKey]);\n            }\n          });\n        }\n\n        function pushSub(items) {\n          angular.each(items, d => {\n            if (d[$scope.subKey] && d[$scope.subKey].length) {\n              pushSub(d[$scope.subKey]);\n            } else {\n              newModel.push(d[$scope.valueKey] + '');\n            }\n          });\n        }\n\n        getSub($scope.data);\n\n        return newModel;\n      }\n\n      function getSelectedWithChild() {\n        const newSelected = [];\n        const selected = $ctrl.rightSelected || [];\n\n        function checkSub(items) {\n          angular.each(items, d => {\n            const sub = d[$scope.subKey];\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1 && sub && sub.length) {\n              pushSub(sub);\n            } else if (sub && sub.length) {\n              checkSub(sub);\n            }\n          });\n        }\n\n        function pushSub(sub) {\n          angular.each(sub, dd => {\n            newSelected.push(dd[$scope.valueKey] + '');\n            if (dd[$scope.subKey] && dd[$scope.subKey].length) {\n              pushSub(dd[$scope.subKey]);\n            }\n          });\n        }\n\n        checkSub($scope.data);\n\n        return selected.concat(newSelected);\n      }\n\n      function filterChild() {\n        const selected = $scope.model || [];\n        const newModel = [];\n        const splicedArray = [];\n        let sameCount = 0;\n\n        function checkSub(items) {\n          let subInLen = 0;\n          angular.forEach(items, d => {\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1) {\n              newModel.push(d[$scope.valueKey] + '');\n              subInLen++;\n            } else {\n              const sub = d[$scope.subKey];\n              if (sub && sub.length) {\n                const subInLen = checkSub(sub);\n                // 如果子全部在，就只存在父级\n                if (subInLen >= sub.length) {\n                  newModel.push(d[$scope.valueKey] + '');\n                  angular.each(sub, s => {\n                    if (newModel.indexOf(s[$scope.valueKey] + '') !== -1) {\n                      newModel.splice(newModel.indexOf(s[$scope.valueKey] + ''), 1);\n                    }\n                  });\n                }\n              }\n            }\n          });\n          return subInLen;\n        }\n\n        checkSub($scope.data);\n\n        newModel.forEach(d => {\n          if (selected.indexOf(d) !== -1) {\n            sameCount++;\n          }\n        });\n\n        return sameCount < selected.length ? newModel : false;\n      }\n\n      function updateLeftRigthData() {\n        const leftData = $.extend(true, [], $scope.data);\n        const rightData = $.extend(true, [], $scope.data);\n\n        $ctrl.leftData = leftData;\n        $ctrl.rightData = rightData;\n      }\n\n      function getParentAndChild(selected) {\n        const newSelected = [];\n\n        function get(items) {\n          angular.each(items, item => {\n            if (selected.indexOf(item[$scope.valueKey] + '') !== -1) {\n              let cItem = item;\n\n              newSelected.push(item[$scope.valueKey] + '');\n\n              while (cItem._parent) {\n                if (newSelected.indexOf(cItem._parent[$scope.valueKey] + '') === -1) {\n                  newSelected.push(cItem._parent[$scope.valueKey] + '');\n                }\n                cItem = cItem._parent;\n              }\n\n              getSub(item[$scope.subKey]);\n            }\n\n            if (item[$scope.subKey] && item[$scope.subKey].length) {\n              get(item[$scope.subKey]);\n            }\n          });\n        }\n\n        function getSub(sub) {\n          if (sub && sub.length) {\n            angular.each(sub, item => {\n              newSelected.push(item[$scope.valueKey] + '');\n              getSub(item[$scope.subKey]);\n            });\n          }\n        }\n\n        get($ctrl.leftData);\n\n        return newSelected;\n      }\n    }],\n    link: function(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', d => {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', d => {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/transfer2/src/treeTransfer2Directive.js","import moduleName from './name.js';\nimport template from 'art-template/lib/template-web.js';\nimport $ from 'jquery';\nimport maTreeTpl from './maTreeTpl.html';\nimport itemTpl from './itemTpl.html';\n\nangular.module(moduleName)\n  .directive('maTree', maTree);\n\nmaTree.$inject = [];\n\nfunction maTree() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      showItems: '=maShowItems',\n      hideItems: '=maHideItems',\n    },\n    template: maTreeTpl,\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function($scope, $element) {\n      const $ctrl = this;\n      const contentTarget = $($element).find('.ui-select-choices-content');\n      const itemCls = '.ui-select-choices-row';\n      let subStore = {};\n\n      $ctrl.searchKey = '';\n\n      $scope.$on('search.clear', () => {\n        $ctrl.searchKey = '';\n      });\n\n      $scope.$watch('$ctrl.searchKey', d => {\n        expandMatch(d);\n      });\n      $scope.$watch('disabled', updateDisabled);\n\n      $scope.$watch('data', d => {\n        const items = updateTree(d);\n\n        $scope.newItems = items;\n        renderContent(items);\n      });\n\n      $scope.$watch('showItems', d => {\n        // console.log('show items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n      $scope.$watch('hideItems', d => {\n        // console.log('hide items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n\n      $scope.$watch('model', d => {\n        // console.log('tree model', d);\n\n        // 全不选\n        if (angular.isEmpty(d)) {\n          contentTarget.find(itemCls).each(function() {\n            // if (!$(this).hasClass('hidden')) {\n            $(this).find('input').prop('checked', false);\n            // }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n        }\n\n        // 全选\n        if (d === 'all') {\n          const newModel = [];\n          contentTarget.find(itemCls).each(function() {\n            if (!$(this).hasClass('hidden')) {\n              $(this).find('input').prop('checked', true);\n              newModel.push($(this).attr('data-value'));\n            }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n\n          $scope.model = newModel;\n        }\n      });\n\n      function expandMatch(searchKey) {\n        contentTarget.find('.search-match').removeClass('search-match');\n        if (angular.isNull(searchKey)) {\n          return;\n        }\n\n        let expands = [];\n        let unexpand = [];\n\n        $scope.newItems.forEach(d => {\n          let item = d;\n\n          if ((item[$scope.textKey] + '').indexOf(searchKey) !== -1 && item._from) {\n            expands.push(item._from);\n            while (item._parent && item._parent._from) {\n              expands.push(item._parent._from);\n              item = item._parent;\n            }\n          }\n        });\n\n        function doExpand() {\n          expands.forEach(d => {\n            const arrow = contentTarget.find(`${itemCls}[data-to=\"${d}\"] .tree-arrow-click`);\n\n            if (arrow.length) {\n              if (!arrow.parent().hasClass('tree-open')) {\n                arrow.trigger('click');\n              }\n            } else {\n              unexpand.push(d);\n            }\n          });\n          expands = unexpand;\n          unexpand = [];\n          if (expands.length) {\n            doExpand();\n          }\n        }\n\n        doExpand();\n\n        // 设置match class\n        $scope.newItems.forEach(d => {\n          if ((d[$scope.textKey] + '').indexOf(searchKey) !== -1) {\n            contentTarget.find(`${itemCls}[data-value=\"${d[$scope.valueKey] + ''}\"]`).addClass(\n              'search-match');\n          }\n        });\n      }\n\n      function updateDisabled() {\n        if ($scope.disabled) {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', true);\n        } else {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', false);\n        }\n      }\n\n      function renderContent(data) {\n        const items = $(template.render(itemTpl, {\n          data,\n          textKey: $scope.textKey,\n          valueKey: $scope.valueKey,\n        }));\n\n        bindEvent(items);\n\n        contentTarget.html(items);\n\n        updateHideShow();\n      }\n\n      function updateHideShow() {\n        // 如果有要隐藏的隐藏\n        if ($scope.hideItems) {\n          const parents = getParents($scope.hideItems);\n          const childs = getChilds($scope.hideItems);\n\n          contentTarget.find(itemCls).removeClass('hidden');\n          $scope.hideItems.forEach(d => {\n            const value = angular.isObject(d) ? (d[$scope.valueKey] + '') : d;\n            const item = contentTarget.find(`${itemCls}[data-value=\"${value}\"]`);\n            item.addClass('hidden');\n          });\n          childs.forEach(d => {\n            contentTarget.find(`${itemCls}[data-value=\"${d}\"]`).addClass(\n              'hidden');\n          });\n          parents.forEach(d => {\n            contentTarget.find(`${itemCls}[data-value=\"${d}\"]`).removeClass(\n              'hidden');\n          });\n        }\n\n        // 如果有要现实的显示\n        if ($scope.showItems) {\n          const parents = getParents($scope.showItems);\n          const childs = getChilds($scope.showItems);\n\n          contentTarget.find(itemCls).addClass('hidden');\n\n          $scope.showItems.forEach(d => {\n            const value = angular.isObject(d) ? (d[$scope.valueKey] + '') : d;\n            const item = contentTarget.find(`${itemCls}[data-value=\"${value}\"]`);\n\n            item.removeClass('hidden');\n          });\n\n          (parents.concat(childs)).forEach(d => {\n            contentTarget.find(`${itemCls}[data-value=\"${d}\"]`).removeClass(\n              'hidden');\n          });\n        }\n      }\n\n      function getChilds(itemValues) {\n        const childs = [];\n        angular.each($scope.newItems, d => {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            getChild(d);\n          }\n        });\n\n        function getChild(item) {\n          let sub = item[$scope.subKey];\n          if (sub && sub.length) {\n            sub.forEach(d => {\n              childs.push(d[$scope.valueKey] + '');\n              getChild(d);\n            });\n          }\n        }\n        return childs;\n      }\n\n      function getParents(itemValues) {\n        const parents = [];\n        angular.each($scope.newItems, d => {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            let item = d;\n            while (item._parent) {\n              parents.push(item._parent[$scope.valueKey] + '');\n              item = item._parent;\n            }\n          }\n        });\n        return parents;\n      }\n\n      function toggleTree(e) {\n        if ($scope.disabled) {\n          return;\n        }\n\n        const target = $(e.target);\n        const item = target.parents(itemCls);\n        const to = item.attr('data-to');\n        let froms = contentTarget.find(`${itemCls}[data-from=\"${to}\"]`);\n        let fromChilds = contentTarget.find(`${itemCls}[data-from*=\"${to}_\"]`);\n\n        if (!froms.length) {\n          froms = $(template.render(itemTpl, {\n            data: subStore[to],\n            textKey: $scope.textKey,\n            valueKey: $scope.valueKey,\n            renderSub: true,\n          }));\n          froms.insertAfter(item);\n          bindEvent(froms, item);\n          updateHideShow();\n        } else {\n          froms.toggleClass('hide');\n          fromChilds.toggleClass('child-hide');\n        }\n        target.parent().toggleClass('tree-open');\n      }\n\n      function bindEvent(items, parent) {\n        items.find('.tree-arrow-click').on('click', toggleTree);\n        items.find('input[type=\"checkbox\"]').on('change', e => {\n          checkedSub($(e.target).parents(itemCls).attr('data-to'), e.target.checked);\n          checkedParent($(e.target).parents(itemCls).attr('data-from'), e.target.checked);\n          updateModel();\n        });\n        if (parent) {\n          checkedSub(parent.attr('data-to'), parent.find('input').prop('checked'));\n        }\n        updateDisabled();\n      }\n\n      function updateModel() {\n        // console.log('update model');\n        const newModel = [];\n        const selectedes = contentTarget.find('input:checked');\n\n        selectedes.each(function() {\n          const item = $(this).parents(itemCls);\n          const from = item.attr('data-from');\n          const parent = contentTarget.find(`${itemCls}[data-to=\"${from}\"]`);\n          const parentValue = parent.attr('data-value');\n\n          if (hasParentSelected(item)) {\n            return true;\n          }\n          newModel.push(item.attr('data-value'));\n          return true;\n        });\n\n        $scope.$applyAsync(() => {\n          $scope.model = newModel;\n        });\n      }\n\n      function hasParentSelected(item) {\n        const from = item.attr('data-from');\n        const parent = contentTarget.find(`${itemCls}[data-to=\"${from}\"]`);\n        let ret = false;\n\n        ret = !!(from && parent.length && parent.find('input').prop('checked'));\n\n        if (ret === false && from && parent.attr('data-from')) {\n          ret = hasParentSelected(parent);\n        }\n\n        return ret;\n      }\n\n      function checkedSub(to, checked) {\n        if (to) {\n          const items = contentTarget.find(`${itemCls}[data-from=\"${to}\"]`);\n          const item = contentTarget.find(`${itemCls}[data-to=\"${to}\"]`);\n\n          items.each(function() {\n            if (!$(this).hasClass('hidden')) {\n              $(this).find('input').prop('checked', checked);\n              checkedSub($(this).attr('data-to'), checked);\n            }\n          });\n          item.find('.ma-checkbox').removeClass('has-sub');\n        }\n      }\n\n      function checkedParent(from) {\n        if (from) {\n          const items = contentTarget.find(`${itemCls}[data-to=\"${from}\"]`);\n          const maCheckbox = items.find('.ma-checkbox');\n          const data = getSubCheckedCount(from);\n\n          maCheckbox.removeClass('has-sub');\n          if (data.count <= 0) {\n            items.find('input').prop('checked', false);\n            if (data.sub) {\n              maCheckbox.addClass('has-sub');\n            }\n          } else if (data.count >= data.total) {\n            items.find('input').prop('checked', true);\n          } else {\n            items.find('input').prop('checked', false);\n            maCheckbox.addClass('has-sub');\n          }\n\n          checkedParent(items.attr('data-from'));\n        }\n      }\n\n      function getSubCheckedCount(from) {\n        const items = contentTarget.find(`${itemCls}[data-from=\"${from}\"]`);\n        let count = 0;\n        let total = 0;\n        let sub = 0;\n\n        items.each(function() {\n          if (!$(this).hasClass('hidden')) {\n            if ($(this).find('input').prop('checked')) {\n              count++;\n            }\n            if ($(this).find('.ma-checkbox').hasClass('has-sub')) {\n              sub++;\n            }\n            total++;\n          }\n        });\n        return {\n          total,\n          count,\n          sub,\n        };\n      }\n\n      function updateTree(items) {\n        const newItems = [];\n        const subKey = $scope.subKey;\n\n        subStore = {};\n\n        function getSub(items, parentItem, treeLevel) {\n          angular.each(items, function(d) {\n            const item = d;\n\n            newItems.push(item);\n\n            item._level = treeLevel;\n\n            if (item[subKey] && item[subKey].length) {\n              item.tagId = parentItem ? parentItem.tagId + '_' +\n                angular.uuid() : 'tag_' + angular.uuid();\n              item._to = item.tagId;\n              item._sub = true;\n              subStore[item.tagId] = item[subKey];\n              angular.forEach(item[subKey], function(it) {\n                it._parent = item;\n                it._from = item.tagId;\n              });\n              getSub(item[subKey], item, treeLevel + 1);\n            }\n          });\n        }\n        getSub(items, null, 0);\n        return newItems;\n      }\n    }],\n    link: function(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', d => {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', d => {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/transfer2/src/treeDirective.js"],"sourceRoot":""}