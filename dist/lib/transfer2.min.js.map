{"version":3,"sources":["webpack:///transfer2.min.js","webpack:///./src/components/transfer2/src/maTreeTpl.html","webpack:///./src/components/transfer2/src/maTreeTransfer2Tpl.html","webpack:///./src/components/transfer2/index.js","webpack:///./src/components/transfer2/src/itemTpl.html","webpack:///./src/components/transfer2/src/name.js","webpack:///./src/components/transfer2/src/treeTransfer2Directive.js","webpack:///./src/components/transfer2/src/treeDirective.js"],"names":["webpackJsonp","7fJ5","module","exports","BWKA","e2Tx","__webpack_require__","Object","defineProperty","value","_name","_name2","obj","__esModule","default","angular","config","run","oXUz","pL48","s87f","_interopRequireDefault","maTreeTransfer2","restrict","replace","scope","data","model","valueKey","textKey","subKey","disabled","leftTitle","rightTitle","template","_maTreeTransfer2Tpl2","controllerAs","controller","$scope","$element","updateLeftSub","updateSub","updateRightSub","direction","level0Items","_jquery2","find","level0Values","selected","$ctrl","count","len","each","this","hasClass","push","attr","forEach","d","indexOf","isSelectedChangeCheckbox","toRight","isNull","concat","leftSelected","rightSelected","leftCheckbox","rightCheckbox","toLeft","oldModel","getModelWidthChild","newModel","selectWithChild","getSelectedWithChild","getSub","items","length","pushSub","checkSub","sub","dd","newSelected","filterChild","subInLen","s","splice","sameCount","updateLeftRigthData","leftData","extend","rightData","searchKey","leftSub","leftButtonDisabled","rightButtonDisabled","rightSub","leftHideItems","rightShowItems","$watch","link","element","attrs","ctrl","maTextKey","maValueKey","$observe","_jquery","_maTreeTransfer2Tpl","directive","$inject","xEAJ","maTree","showItems","hideItems","_maTreeTpl2","expandMatch","exp","RegExp","expands","newItems","item","test","_from","_parent","updateDisabled","contentTarget","renderContent","_templateWeb2","render","_itemTpl2","bindEvent","html","updateHideShow","parents","getParents","childs","getChilds","itemCls","removeClass","isObject","addClass","_parents","_childs","itemValues","getChild","toggleTree","e","target","to","froms","fromChilds","toggleClass","subStore","renderSub","insertAfter","parent","on","checkedSub","checked","checkedParent","updateModel","prop","from","hasParentSelected","$applyAsync","ret","maCheckbox","getSubCheckedCount","total","updateTree","parentItem","treeLevel","_level","tagId","uuid","_to","_sub","it","isEmpty","_templateWeb","_maTreeTpl","_itemTpl"],"mappings":"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","file":"transfer2.min.js","sourcesContent":["webpackJsonp([17],{\n\n/***/ \"7fJ5\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"ma-tree-select transition-none\\\"\\n  ng-disabled=\\\"disabled\\\">\\n  <div class=\\\"custom-multi-select form-control ui-select-container ui-select-multiple select2 select2-container select2-container-multi ng-isolate-scope ng-not-empty ng-valid custom-tree-select custom-static-select\\\">\\n\\n    <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active select2-display-none\\\">\\n      <div class=\\\"search-container select2-search\\\">\\n        <div class=\\\"ma-input ma-input-search-normal\\\"\\n          ng-disabled=\\\"disabled\\\">\\n          <input type=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            role=\\\"combobox\\\"\\n            aria-expanded=\\\"true\\\"\\n            aria-owns=\\\"ui-select-choices-0\\\"\\n            aria-label=\\\"Select box\\\"\\n            class=\\\"select2-input ui-select-search ng-pristine ng-valid ng-empty ng-touched\\\"\\n            ng-model=\\\"$ctrl.searchKey\\\"\\n            ng-disabled=\\\"disabled\\\"\\n            ondrop=\\\"return false;\\\">\\n        </div>\\n      </div>\\n      <ul tabindex=\\\"-1\\\"\\n        class=\\\"ui-select-choices ui-select-choices-content select2-results ng-scope\\\">\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ \"BWKA\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"ma-transfer\\\">\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-left-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.leftSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.leftCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{leftTitle || '所有'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-left-tree\\\"\\n      ng-model=\\\"$ctrl.leftSelected\\\"\\n      ma-data=\\\"$ctrl.leftData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-hide-items=\\\"$ctrl.leftHideItems\\\"></ma-tree>\\n  </div>\\n  <div class=\\\"fl ma-transfer-center\\\">\\n    <div class=\\\"mb-20\\\">\\n      <ma-button ng-disabled=\\\"$ctrl.leftButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toRight($event)\\\">\\n        <span>添加</span>\\n        <ma-icon ma-type=\\\"arrowright\\\"></ma-icon>\\n      </ma-button>\\n    </div>\\n    <div>\\n      <ma-button ng-disabled=\\\"$ctrl.rightButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toLeft($event)\\\">\\n        <ma-icon ma-type=\\\"arrowleft\\\"></ma-icon>\\n        <span>删除</span>\\n      </ma-button>\\n    </div>\\n  </div>\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-right-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.rightSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.rightCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{rightTitle || '选中'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-right-tree\\\"\\n      ng-model=\\\"$ctrl.rightSelected\\\"\\n      ma-data=\\\"$ctrl.rightData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-show-items=\\\"$ctrl.rightShowItems\\\"></ma-tree>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ \"e2Tx\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\n__webpack_require__(\"xEAJ\");\n__webpack_require__(\"s87f\");\n\nexports['default'] = _name2['default'];\n\n/***/ }),\n\n/***/ \"oXUz\":\n/***/ (function(module, exports) {\n\nmodule.exports = \" {{each data}}\\n {{if !$value._parent || renderSub}}\\n<li class=\\\"ui-select-choices-row tree-level-{{$value._level}} {{$value._sub ? 'has-sub': ''}}\\\"\\n  data-value=\\\"{{$value[valueKey]}}\\\"\\n  data-from=\\\"{{$value._from}}\\\"\\n  data-to=\\\"{{$value._to}}\\\">\\n  <div class=\\\"select2-result-label ui-select-choices-row-inner\\\">\\n    <div>\\n      {{if $value._sub}}\\n      <i class=\\\"tree-arrow-click\\\">\\n        <i class=\\\"tree-arrow\\\"></i>\\n      </i>\\n      {{/if}}\\n      <!-- <div class=\\\"click-mask\\\"></div> -->\\n      <label class=\\\"ma-checkbox\\\">\\n        <input type=\\\"checkbox\\\" />\\n        <i class=\\\"checkbox-appearance\\\"></i>\\n        <span>{{$value[textKey]}}</span>\\n      </label>\\n    </div>\\n  </div>\\n</li>\\n{{/if}}\\n{{/each}}\\n\";\n\n/***/ }),\n\n/***/ \"pL48\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.transfer2';\n\n/***/ }),\n\n/***/ \"s87f\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _jquery = __webpack_require__(\"7t+N\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTransfer2Tpl = __webpack_require__(\"BWKA\");\n\nvar _maTreeTransfer2Tpl2 = _interopRequireDefault(_maTreeTransfer2Tpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTreeTransfer2', maTreeTransfer2);\n\nmaTreeTransfer2.$inject = [];\n\nfunction maTreeTransfer2() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      leftTitle: '@maLeftTitle',\n      rightTitle: '@maRightTitle'\n    },\n    template: _maTreeTransfer2Tpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function ($scope, $element) {\n      var $ctrl = this;\n\n      $ctrl.searchKey = '';\n\n      $ctrl.leftSub = false;\n      $ctrl.leftCheckbox = false;\n\n      $ctrl.leftButtonDisabled = true;\n      $ctrl.rightButtonDisabled = true;\n\n      $ctrl.rightSub = false;\n      $ctrl.rightCheckbox = false;\n\n      $ctrl.toRight = toRight;\n      $ctrl.toLeft = toLeft;\n\n      $ctrl.leftSelected = [];\n      $ctrl.rightSelected = [];\n\n      $ctrl.leftData = [];\n      $ctrl.rightData = [];\n\n      $ctrl.leftHideItems = [];\n      $ctrl.rightShowItems = [];\n\n      $scope.$watch('data', function (d) {\n        // console.log('transfer2 data', d);\n        updateLeftRigthData();\n      });\n\n      $scope.$watch('model', function (d) {\n        console.log('transfer2 model', d);\n\n        // 过滤掉父子同在\n        var newModel = filterChild();\n\n        if (newModel) {\n          $scope.model = newModel;\n          return;\n        }\n\n        $ctrl.leftHideItems = d || [];\n        $ctrl.rightShowItems = d || [];\n      });\n\n      $scope.$watch('$ctrl.leftCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.leftSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.leftSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.rightCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.rightSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.rightSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.leftSelected', function (d) {\n        $ctrl.leftButtonDisabled = !(d && d.length);\n        updateLeftSub();\n      });\n\n      $scope.$watch('$ctrl.rightSelected', function (d) {\n        $ctrl.rightButtonDisabled = !(d && d.length);\n        updateRightSub();\n      });\n\n      function updateLeftSub() {\n        updateSub('left');\n      }\n\n      function updateRightSub() {\n        updateSub('right');\n      }\n\n      function updateSub(direction) {\n        var level0Items = (0, _jquery2['default'])($element).find('.ma-transfer-' + direction + '-tree.ma-tree-select .tree-level-0');\n        var level0Values = [];\n        var selected = $ctrl[direction + 'Selected'] || [];\n        var count = 0;\n        var len = 0;\n\n        level0Items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            level0Values.push((0, _jquery2['default'])(this).attr('data-value'));\n          }\n        });\n\n        level0Values.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            count++;\n          }\n          len++;\n        });\n\n        if (len > 0) {\n          if (count > 0 && count < len) {\n            $ctrl[direction + 'Sub'] = true;\n          } else {\n            $ctrl[direction + 'Sub'] = false;\n          }\n          if (count === len) {\n            if ($ctrl[direction + 'Checkbox'] === false) {\n              $ctrl[direction + 'Checkbox'] = true;\n              $scope.isSelectedChangeCheckbox = true;\n            }\n          } else if ($ctrl[direction + 'Checkbox'] === true) {\n            $ctrl[direction + 'Checkbox'] = false;\n            $scope.isSelectedChangeCheckbox = true;\n          }\n        }\n      }\n\n      function toRight() {\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        $scope.model = $scope.model.concat($ctrl.leftSelected);\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function toLeft() {\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        var oldModel = getModelWidthChild();\n        var newModel = [];\n        var selectWithChild = getSelectedWithChild();\n\n        angular.each(oldModel, function (d) {\n          if (selectWithChild.indexOf(d) === -1) {\n            newModel.push(d);\n          }\n        });\n\n        $scope.model = newModel;\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function getModelWidthChild() {\n        var model = $scope.model || [];\n        var newModel = [];\n\n        function getSub(items) {\n          angular.each(items, function (d) {\n            if (model.indexOf(d[$scope.valueKey]) !== -1) {\n              if (d[$scope.subKey] && d[$scope.subKey].length) {\n                pushSub(d[$scope.subKey]);\n              } else {\n                newModel.push(d[$scope.valueKey]);\n              }\n            } else {\n              getSub(d[$scope.subKey]);\n            }\n          });\n        }\n\n        function pushSub(items) {\n          angular.each(items, function (d) {\n            if (d[$scope.subKey] && d[$scope.subKey].length) {\n              pushSub(d[$scope.subKey]);\n            } else {\n              newModel.push(d[$scope.valueKey]);\n            }\n          });\n        }\n\n        getSub($scope.data);\n\n        return newModel;\n      }\n\n      function getSelectedWithChild() {\n        var newSelected = [];\n        var selected = $ctrl.rightSelected || [];\n\n        function checkSub(items) {\n          angular.each(items, function (d) {\n            var sub = d[$scope.subKey];\n            if (selected.indexOf(d[$scope.valueKey]) !== -1 && sub && sub.length) {\n              pushSub(sub);\n            } else if (sub && sub.length) {\n              checkSub(sub);\n            }\n          });\n        }\n\n        function pushSub(sub) {\n          angular.each(sub, function (dd) {\n            newSelected.push(dd[$scope.valueKey]);\n            if (dd[$scope.subKey] && dd[$scope.subKey].length) {\n              pushSub(dd[$scope.subKey]);\n            }\n          });\n        }\n\n        checkSub($scope.data);\n\n        return selected.concat(newSelected);\n      }\n\n      function filterChild() {\n        var selected = $scope.model || [];\n        var newModel = [];\n        var splicedArray = [];\n        var sameCount = 0;\n\n        function checkSub(items) {\n          var subInLen = 0;\n          angular.forEach(items, function (d) {\n            if (selected.indexOf(d[$scope.valueKey]) !== -1) {\n              newModel.push(d[$scope.valueKey]);\n              subInLen++;\n            } else {\n              var sub = d[$scope.subKey];\n              if (sub && sub.length) {\n                var _subInLen = checkSub(sub);\n                // 如果子全部在，就只存在父级\n                if (_subInLen >= sub.length) {\n                  newModel.push(d[$scope.valueKey]);\n                  angular.each(sub, function (s) {\n                    if (newModel.indexOf(s[$scope.valueKey]) !== -1) {\n                      newModel.splice(newModel.indexOf(s[$scope.valueKey]), 1);\n                    }\n                  });\n                }\n              }\n            }\n          });\n          return subInLen;\n        }\n\n        checkSub($scope.data);\n\n        newModel.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            sameCount++;\n          }\n        });\n\n        return sameCount < selected.length ? newModel : false;\n      }\n\n      function updateLeftRigthData() {\n        var leftData = _jquery2['default'].extend(true, [], $scope.data);\n        var rightData = _jquery2['default'].extend(true, [], $scope.data);\n\n        $ctrl.leftData = leftData;\n        $ctrl.rightData = rightData;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"xEAJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _templateWeb = __webpack_require__(\"H+C6\");\n\nvar _templateWeb2 = _interopRequireDefault(_templateWeb);\n\nvar _jquery = __webpack_require__(\"7t+N\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTpl = __webpack_require__(\"7fJ5\");\n\nvar _maTreeTpl2 = _interopRequireDefault(_maTreeTpl);\n\nvar _itemTpl = __webpack_require__(\"oXUz\");\n\nvar _itemTpl2 = _interopRequireDefault(_itemTpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTree', maTree);\n\nmaTree.$inject = [];\n\nfunction maTree() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      showItems: '=maShowItems',\n      hideItems: '=maHideItems'\n    },\n    template: _maTreeTpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function ($scope, $element) {\n      var $ctrl = this;\n      var contentTarget = (0, _jquery2['default'])($element).find('.ui-select-choices-content');\n      var itemCls = '.ui-select-choices-row';\n      var subStore = {};\n      var alreadyExpandAll = false;\n\n      $ctrl.searchKey = '';\n\n      $scope.$watch('$ctrl.searchKey', function (d) {\n        expandMatch(d);\n      });\n      $scope.$watch('disabled', updateDisabled);\n\n      $scope.$watch('data', function (d) {\n        var items = updateTree(d);\n\n        $scope.newItems = items;\n        renderContent(items);\n      });\n\n      $scope.$watch('showItems', function (d) {\n        // console.log('show items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n      $scope.$watch('hideItems', function (d) {\n        // console.log('hide items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n\n      $scope.$watch('model', function (d) {\n        // console.log('tree model', d);\n\n        // 全不选\n        if (angular.isEmpty(d)) {\n          contentTarget.find(itemCls).each(function () {\n            // if (!$(this).hasClass('hidden')) {\n            (0, _jquery2['default'])(this).find('input').prop('checked', false);\n            // }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n        }\n\n        // 全选\n        if (d === 'all') {\n          var newModel = [];\n          contentTarget.find(itemCls).each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', true);\n              newModel.push((0, _jquery2['default'])(this).attr('data-value'));\n            }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n\n          $scope.model = newModel;\n        }\n      });\n\n      function expandMatch(searchKey) {\n        if (angular.isNull(searchKey)) {\n          return;\n        }\n\n        var exp = new RegExp(searchKey, 'g');\n        var expands = [];\n        var unexpand = [];\n\n        $scope.newItems.forEach(function (d) {\n          var item = d;\n\n          if (exp.test(item[$scope.textKey]) && item._from) {\n            expands.push(item._from);\n            while (item._parent && item._parent._from) {\n              expands.push(item._parent._from);\n              item = item._parent;\n            }\n          }\n        });\n\n        function doExpand() {\n          expands.forEach(function (d) {\n            var arrow = contentTarget.find(itemCls + '[data-to=\"' + d + '\"] .tree-arrow-click');\n\n            if (arrow.length) {\n              if (!arrow.hasClass('tree-open')) {\n                arrow.trigger('click');\n              }\n            } else {\n              unexpand.push(d);\n            }\n          });\n          expands = unexpand;\n          unexpand = [];\n          if (expands.length) {\n            doExpand();\n          }\n        }\n      }\n\n      function updateDisabled() {\n        if ($scope.disabled) {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', true);\n        } else {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', false);\n        }\n      }\n\n      function renderContent(data) {\n        var items = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n          data: data,\n          textKey: $scope.textKey,\n          valueKey: $scope.valueKey\n        }));\n\n        bindEvent(items);\n\n        contentTarget.html(items);\n\n        updateHideShow();\n      }\n\n      function updateHideShow() {\n        // 如果有要隐藏的隐藏\n        if ($scope.hideItems) {\n          var parents = getParents($scope.hideItems);\n          var childs = getChilds($scope.hideItems);\n\n          contentTarget.find(itemCls).removeClass('hidden');\n          $scope.hideItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n            item.addClass('hidden');\n          });\n          childs.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').addClass('hidden');\n          });\n          parents.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n\n        // 如果有要现实的显示\n        if ($scope.showItems) {\n          var _parents = getParents($scope.showItems);\n          var _childs = getChilds($scope.showItems);\n\n          contentTarget.find(itemCls).addClass('hidden');\n\n          $scope.showItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n\n            item.removeClass('hidden');\n          });\n\n          _parents.concat(_childs).forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n      }\n\n      function getChilds(itemValues) {\n        var childs = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey]) !== -1) {\n            getChild(d);\n          }\n        });\n\n        function getChild(item) {\n          var sub = item[$scope.subKey];\n          if (sub && sub.length) {\n            sub.forEach(function (d) {\n              childs.push(d[$scope.valueKey]);\n              getChild(d);\n            });\n          }\n        }\n        return childs;\n      }\n\n      function getParents(itemValues) {\n        var parents = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey]) !== -1) {\n            var item = d;\n            while (item._parent) {\n              parents.push(item._parent[$scope.valueKey]);\n              item = item._parent;\n            }\n          }\n        });\n        return parents;\n      }\n\n      function toggleTree(e) {\n        if ($scope.disabled) {\n          return;\n        }\n\n        var target = (0, _jquery2['default'])(e.target);\n        var item = target.parents(itemCls);\n        var to = item.attr('data-to');\n        var froms = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n        var fromChilds = contentTarget.find(itemCls + '[data-from*=\"' + to + '_\"]');\n\n        if (!froms.length) {\n          froms = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n            data: subStore[to],\n            textKey: $scope.textKey,\n            valueKey: $scope.valueKey,\n            renderSub: true\n          }));\n          froms.insertAfter(item);\n          bindEvent(froms, item);\n          updateHideShow();\n        } else {\n          froms.toggleClass('hide');\n          fromChilds.toggleClass('child-hide');\n        }\n        target.parent().toggleClass('tree-open');\n      }\n\n      function bindEvent(items, parent) {\n        items.find('.tree-arrow-click').on('click', toggleTree);\n        items.find('input[type=\"checkbox\"]').on('change', function (e) {\n          checkedSub((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-to'), e.target.checked);\n          checkedParent((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-from'), e.target.checked);\n          updateModel();\n        });\n        if (parent) {\n          checkedSub(parent.attr('data-to'), parent.find('input').prop('checked'));\n        }\n        updateDisabled();\n      }\n\n      function updateModel() {\n        // console.log('update model');\n        var newModel = [];\n        var selectedes = contentTarget.find('input:checked');\n\n        selectedes.each(function () {\n          var item = (0, _jquery2['default'])(this).parents(itemCls);\n          var from = item.attr('data-from');\n          var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var parentValue = parent.attr('data-value');\n\n          if (hasParentSelected(item)) {\n            return true;\n          }\n          newModel.push(item.attr('data-value'));\n          return true;\n        });\n\n        $scope.$applyAsync(function () {\n          $scope.model = newModel;\n        });\n      }\n\n      function hasParentSelected(item) {\n        var from = item.attr('data-from');\n        var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n        var ret = false;\n\n        ret = !!(from && parent.length && parent.find('input').prop('checked'));\n\n        if (ret === false && from && parent.attr('data-from')) {\n          ret = hasParentSelected(parent);\n        }\n\n        return ret;\n      }\n\n      function checkedSub(to, checked) {\n        if (to) {\n          var items = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n          var item = contentTarget.find(itemCls + '[data-to=\"' + to + '\"]');\n\n          items.each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', checked);\n              checkedSub((0, _jquery2['default'])(this).attr('data-to'), checked);\n            }\n          });\n          item.find('.ma-checkbox').removeClass('has-sub');\n        }\n      }\n\n      function checkedParent(from) {\n        if (from) {\n          var items = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var maCheckbox = items.find('.ma-checkbox');\n          var data = getSubCheckedCount(from);\n\n          maCheckbox.removeClass('has-sub');\n          if (data.count <= 0) {\n            items.find('input').prop('checked', false);\n            if (data.sub) {\n              maCheckbox.addClass('has-sub');\n            }\n          } else if (data.count >= data.total) {\n            items.find('input').prop('checked', true);\n          } else {\n            items.find('input').prop('checked', false);\n            maCheckbox.addClass('has-sub');\n          }\n\n          checkedParent(items.attr('data-from'));\n        }\n      }\n\n      function getSubCheckedCount(from) {\n        var items = contentTarget.find(itemCls + '[data-from=\"' + from + '\"]');\n        var count = 0;\n        var total = 0;\n        var sub = 0;\n\n        items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            if ((0, _jquery2['default'])(this).find('input').prop('checked')) {\n              count++;\n            }\n            if ((0, _jquery2['default'])(this).find('.ma-checkbox').hasClass('has-sub')) {\n              sub++;\n            }\n            total++;\n          }\n        });\n        return {\n          total: total,\n          count: count,\n          sub: sub\n        };\n      }\n\n      function updateTree(items) {\n        var newItems = [];\n        var subKey = $scope.subKey;\n\n        subStore = {};\n\n        function getSub(items, parentItem, treeLevel) {\n          angular.each(items, function (d) {\n            var item = d;\n\n            newItems.push(item);\n\n            item._level = treeLevel;\n\n            if (item[subKey] && item[subKey].length) {\n              item.tagId = parentItem ? parentItem.tagId + '_' + angular.uuid() : 'tag_' + angular.uuid();\n              item._to = item.tagId;\n              item._sub = true;\n              subStore[item.tagId] = item[subKey];\n              angular.forEach(item[subKey], function (it) {\n                it._parent = item;\n                it._from = item.tagId;\n              });\n              getSub(item[subKey], item, treeLevel + 1);\n            }\n          });\n        }\n        getSub(items, null, 0);\n        return newItems;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n/***/ })\n\n},[\"e2Tx\"]);\n\n\n// WEBPACK FOOTER //\n// transfer2.min.js","module.exports = \"<div class=\\\"ma-tree-select transition-none\\\"\\n  ng-disabled=\\\"disabled\\\">\\n  <div class=\\\"custom-multi-select form-control ui-select-container ui-select-multiple select2 select2-container select2-container-multi ng-isolate-scope ng-not-empty ng-valid custom-tree-select custom-static-select\\\">\\n\\n    <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active select2-display-none\\\">\\n      <div class=\\\"search-container select2-search\\\">\\n        <div class=\\\"ma-input ma-input-search-normal\\\"\\n          ng-disabled=\\\"disabled\\\">\\n          <input type=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            role=\\\"combobox\\\"\\n            aria-expanded=\\\"true\\\"\\n            aria-owns=\\\"ui-select-choices-0\\\"\\n            aria-label=\\\"Select box\\\"\\n            class=\\\"select2-input ui-select-search ng-pristine ng-valid ng-empty ng-touched\\\"\\n            ng-model=\\\"$ctrl.searchKey\\\"\\n            ng-disabled=\\\"disabled\\\"\\n            ondrop=\\\"return false;\\\">\\n        </div>\\n      </div>\\n      <ul tabindex=\\\"-1\\\"\\n        class=\\\"ui-select-choices ui-select-choices-content select2-results ng-scope\\\">\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/maTreeTpl.html\n// module id = 7fJ5\n// module chunks = 17","module.exports = \"<div class=\\\"ma-transfer\\\">\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-left-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.leftSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.leftCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{leftTitle || '所有'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-left-tree\\\"\\n      ng-model=\\\"$ctrl.leftSelected\\\"\\n      ma-data=\\\"$ctrl.leftData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-hide-items=\\\"$ctrl.leftHideItems\\\"></ma-tree>\\n  </div>\\n  <div class=\\\"fl ma-transfer-center\\\">\\n    <div class=\\\"mb-20\\\">\\n      <ma-button ng-disabled=\\\"$ctrl.leftButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toRight($event)\\\">\\n        <span>添加</span>\\n        <ma-icon ma-type=\\\"arrowright\\\"></ma-icon>\\n      </ma-button>\\n    </div>\\n    <div>\\n      <ma-button ng-disabled=\\\"$ctrl.rightButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toLeft($event)\\\">\\n        <ma-icon ma-type=\\\"arrowleft\\\"></ma-icon>\\n        <span>删除</span>\\n      </ma-button>\\n    </div>\\n  </div>\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-right-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.rightSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.rightCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{rightTitle || '选中'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-right-tree\\\"\\n      ng-model=\\\"$ctrl.rightSelected\\\"\\n      ma-data=\\\"$ctrl.rightData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-show-items=\\\"$ctrl.rightShowItems\\\"></ma-tree>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/maTreeTransfer2Tpl.html\n// module id = BWKA\n// module chunks = 17","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = require('./src/name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\nrequire('./src/treeDirective.js');\nrequire('./src/treeTransfer2Directive.js');\n\nexports['default'] = _name2['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/index.js\n// module id = e2Tx\n// module chunks = 17","module.exports = \" {{each data}}\\n {{if !$value._parent || renderSub}}\\n<li class=\\\"ui-select-choices-row tree-level-{{$value._level}} {{$value._sub ? 'has-sub': ''}}\\\"\\n  data-value=\\\"{{$value[valueKey]}}\\\"\\n  data-from=\\\"{{$value._from}}\\\"\\n  data-to=\\\"{{$value._to}}\\\">\\n  <div class=\\\"select2-result-label ui-select-choices-row-inner\\\">\\n    <div>\\n      {{if $value._sub}}\\n      <i class=\\\"tree-arrow-click\\\">\\n        <i class=\\\"tree-arrow\\\"></i>\\n      </i>\\n      {{/if}}\\n      <!-- <div class=\\\"click-mask\\\"></div> -->\\n      <label class=\\\"ma-checkbox\\\">\\n        <input type=\\\"checkbox\\\" />\\n        <i class=\\\"checkbox-appearance\\\"></i>\\n        <span>{{$value[textKey]}}</span>\\n      </label>\\n    </div>\\n  </div>\\n</li>\\n{{/if}}\\n{{/each}}\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/itemTpl.html\n// module id = oXUz\n// module chunks = 17","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.transfer2';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/name.js\n// module id = pL48\n// module chunks = 17","'use strict';\n\nvar _name = require('./name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTransfer2Tpl = require('./maTreeTransfer2Tpl.html');\n\nvar _maTreeTransfer2Tpl2 = _interopRequireDefault(_maTreeTransfer2Tpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTreeTransfer2', maTreeTransfer2);\n\nmaTreeTransfer2.$inject = [];\n\nfunction maTreeTransfer2() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      leftTitle: '@maLeftTitle',\n      rightTitle: '@maRightTitle'\n    },\n    template: _maTreeTransfer2Tpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function ($scope, $element) {\n      var $ctrl = this;\n\n      $ctrl.searchKey = '';\n\n      $ctrl.leftSub = false;\n      $ctrl.leftCheckbox = false;\n\n      $ctrl.leftButtonDisabled = true;\n      $ctrl.rightButtonDisabled = true;\n\n      $ctrl.rightSub = false;\n      $ctrl.rightCheckbox = false;\n\n      $ctrl.toRight = toRight;\n      $ctrl.toLeft = toLeft;\n\n      $ctrl.leftSelected = [];\n      $ctrl.rightSelected = [];\n\n      $ctrl.leftData = [];\n      $ctrl.rightData = [];\n\n      $ctrl.leftHideItems = [];\n      $ctrl.rightShowItems = [];\n\n      $scope.$watch('data', function (d) {\n        // console.log('transfer2 data', d);\n        updateLeftRigthData();\n      });\n\n      $scope.$watch('model', function (d) {\n        console.log('transfer2 model', d);\n\n        // 过滤掉父子同在\n        var newModel = filterChild();\n\n        if (newModel) {\n          $scope.model = newModel;\n          return;\n        }\n\n        $ctrl.leftHideItems = d || [];\n        $ctrl.rightShowItems = d || [];\n      });\n\n      $scope.$watch('$ctrl.leftCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.leftSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.leftSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.rightCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.rightSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.rightSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.leftSelected', function (d) {\n        $ctrl.leftButtonDisabled = !(d && d.length);\n        updateLeftSub();\n      });\n\n      $scope.$watch('$ctrl.rightSelected', function (d) {\n        $ctrl.rightButtonDisabled = !(d && d.length);\n        updateRightSub();\n      });\n\n      function updateLeftSub() {\n        updateSub('left');\n      }\n\n      function updateRightSub() {\n        updateSub('right');\n      }\n\n      function updateSub(direction) {\n        var level0Items = (0, _jquery2['default'])($element).find('.ma-transfer-' + direction + '-tree.ma-tree-select .tree-level-0');\n        var level0Values = [];\n        var selected = $ctrl[direction + 'Selected'] || [];\n        var count = 0;\n        var len = 0;\n\n        level0Items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            level0Values.push((0, _jquery2['default'])(this).attr('data-value'));\n          }\n        });\n\n        level0Values.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            count++;\n          }\n          len++;\n        });\n\n        if (len > 0) {\n          if (count > 0 && count < len) {\n            $ctrl[direction + 'Sub'] = true;\n          } else {\n            $ctrl[direction + 'Sub'] = false;\n          }\n          if (count === len) {\n            if ($ctrl[direction + 'Checkbox'] === false) {\n              $ctrl[direction + 'Checkbox'] = true;\n              $scope.isSelectedChangeCheckbox = true;\n            }\n          } else if ($ctrl[direction + 'Checkbox'] === true) {\n            $ctrl[direction + 'Checkbox'] = false;\n            $scope.isSelectedChangeCheckbox = true;\n          }\n        }\n      }\n\n      function toRight() {\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        $scope.model = $scope.model.concat($ctrl.leftSelected);\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function toLeft() {\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        var oldModel = getModelWidthChild();\n        var newModel = [];\n        var selectWithChild = getSelectedWithChild();\n\n        angular.each(oldModel, function (d) {\n          if (selectWithChild.indexOf(d) === -1) {\n            newModel.push(d);\n          }\n        });\n\n        $scope.model = newModel;\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function getModelWidthChild() {\n        var model = $scope.model || [];\n        var newModel = [];\n\n        function getSub(items) {\n          angular.each(items, function (d) {\n            if (model.indexOf(d[$scope.valueKey]) !== -1) {\n              if (d[$scope.subKey] && d[$scope.subKey].length) {\n                pushSub(d[$scope.subKey]);\n              } else {\n                newModel.push(d[$scope.valueKey]);\n              }\n            } else {\n              getSub(d[$scope.subKey]);\n            }\n          });\n        }\n\n        function pushSub(items) {\n          angular.each(items, function (d) {\n            if (d[$scope.subKey] && d[$scope.subKey].length) {\n              pushSub(d[$scope.subKey]);\n            } else {\n              newModel.push(d[$scope.valueKey]);\n            }\n          });\n        }\n\n        getSub($scope.data);\n\n        return newModel;\n      }\n\n      function getSelectedWithChild() {\n        var newSelected = [];\n        var selected = $ctrl.rightSelected || [];\n\n        function checkSub(items) {\n          angular.each(items, function (d) {\n            var sub = d[$scope.subKey];\n            if (selected.indexOf(d[$scope.valueKey]) !== -1 && sub && sub.length) {\n              pushSub(sub);\n            } else if (sub && sub.length) {\n              checkSub(sub);\n            }\n          });\n        }\n\n        function pushSub(sub) {\n          angular.each(sub, function (dd) {\n            newSelected.push(dd[$scope.valueKey]);\n            if (dd[$scope.subKey] && dd[$scope.subKey].length) {\n              pushSub(dd[$scope.subKey]);\n            }\n          });\n        }\n\n        checkSub($scope.data);\n\n        return selected.concat(newSelected);\n      }\n\n      function filterChild() {\n        var selected = $scope.model || [];\n        var newModel = [];\n        var splicedArray = [];\n        var sameCount = 0;\n\n        function checkSub(items) {\n          var subInLen = 0;\n          angular.forEach(items, function (d) {\n            if (selected.indexOf(d[$scope.valueKey]) !== -1) {\n              newModel.push(d[$scope.valueKey]);\n              subInLen++;\n            } else {\n              var sub = d[$scope.subKey];\n              if (sub && sub.length) {\n                var _subInLen = checkSub(sub);\n                // 如果子全部在，就只存在父级\n                if (_subInLen >= sub.length) {\n                  newModel.push(d[$scope.valueKey]);\n                  angular.each(sub, function (s) {\n                    if (newModel.indexOf(s[$scope.valueKey]) !== -1) {\n                      newModel.splice(newModel.indexOf(s[$scope.valueKey]), 1);\n                    }\n                  });\n                }\n              }\n            }\n          });\n          return subInLen;\n        }\n\n        checkSub($scope.data);\n\n        newModel.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            sameCount++;\n          }\n        });\n\n        return sameCount < selected.length ? newModel : false;\n      }\n\n      function updateLeftRigthData() {\n        var leftData = _jquery2['default'].extend(true, [], $scope.data);\n        var rightData = _jquery2['default'].extend(true, [], $scope.data);\n\n        $ctrl.leftData = leftData;\n        $ctrl.rightData = rightData;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/treeTransfer2Directive.js\n// module id = s87f\n// module chunks = 17","'use strict';\n\nvar _name = require('./name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _templateWeb = require('art-template/lib/template-web.js');\n\nvar _templateWeb2 = _interopRequireDefault(_templateWeb);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTpl = require('./maTreeTpl.html');\n\nvar _maTreeTpl2 = _interopRequireDefault(_maTreeTpl);\n\nvar _itemTpl = require('./itemTpl.html');\n\nvar _itemTpl2 = _interopRequireDefault(_itemTpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTree', maTree);\n\nmaTree.$inject = [];\n\nfunction maTree() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      showItems: '=maShowItems',\n      hideItems: '=maHideItems'\n    },\n    template: _maTreeTpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function ($scope, $element) {\n      var $ctrl = this;\n      var contentTarget = (0, _jquery2['default'])($element).find('.ui-select-choices-content');\n      var itemCls = '.ui-select-choices-row';\n      var subStore = {};\n      var alreadyExpandAll = false;\n\n      $ctrl.searchKey = '';\n\n      $scope.$watch('$ctrl.searchKey', function (d) {\n        expandMatch(d);\n      });\n      $scope.$watch('disabled', updateDisabled);\n\n      $scope.$watch('data', function (d) {\n        var items = updateTree(d);\n\n        $scope.newItems = items;\n        renderContent(items);\n      });\n\n      $scope.$watch('showItems', function (d) {\n        // console.log('show items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n      $scope.$watch('hideItems', function (d) {\n        // console.log('hide items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n\n      $scope.$watch('model', function (d) {\n        // console.log('tree model', d);\n\n        // 全不选\n        if (angular.isEmpty(d)) {\n          contentTarget.find(itemCls).each(function () {\n            // if (!$(this).hasClass('hidden')) {\n            (0, _jquery2['default'])(this).find('input').prop('checked', false);\n            // }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n        }\n\n        // 全选\n        if (d === 'all') {\n          var newModel = [];\n          contentTarget.find(itemCls).each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', true);\n              newModel.push((0, _jquery2['default'])(this).attr('data-value'));\n            }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n\n          $scope.model = newModel;\n        }\n      });\n\n      function expandMatch(searchKey) {\n        if (angular.isNull(searchKey)) {\n          return;\n        }\n\n        var exp = new RegExp(searchKey, 'g');\n        var expands = [];\n        var unexpand = [];\n\n        $scope.newItems.forEach(function (d) {\n          var item = d;\n\n          if (exp.test(item[$scope.textKey]) && item._from) {\n            expands.push(item._from);\n            while (item._parent && item._parent._from) {\n              expands.push(item._parent._from);\n              item = item._parent;\n            }\n          }\n        });\n\n        function doExpand() {\n          expands.forEach(function (d) {\n            var arrow = contentTarget.find(itemCls + '[data-to=\"' + d + '\"] .tree-arrow-click');\n\n            if (arrow.length) {\n              if (!arrow.hasClass('tree-open')) {\n                arrow.trigger('click');\n              }\n            } else {\n              unexpand.push(d);\n            }\n          });\n          expands = unexpand;\n          unexpand = [];\n          if (expands.length) {\n            doExpand();\n          }\n        }\n      }\n\n      function updateDisabled() {\n        if ($scope.disabled) {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', true);\n        } else {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', false);\n        }\n      }\n\n      function renderContent(data) {\n        var items = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n          data: data,\n          textKey: $scope.textKey,\n          valueKey: $scope.valueKey\n        }));\n\n        bindEvent(items);\n\n        contentTarget.html(items);\n\n        updateHideShow();\n      }\n\n      function updateHideShow() {\n        // 如果有要隐藏的隐藏\n        if ($scope.hideItems) {\n          var parents = getParents($scope.hideItems);\n          var childs = getChilds($scope.hideItems);\n\n          contentTarget.find(itemCls).removeClass('hidden');\n          $scope.hideItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n            item.addClass('hidden');\n          });\n          childs.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').addClass('hidden');\n          });\n          parents.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n\n        // 如果有要现实的显示\n        if ($scope.showItems) {\n          var _parents = getParents($scope.showItems);\n          var _childs = getChilds($scope.showItems);\n\n          contentTarget.find(itemCls).addClass('hidden');\n\n          $scope.showItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n\n            item.removeClass('hidden');\n          });\n\n          _parents.concat(_childs).forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n      }\n\n      function getChilds(itemValues) {\n        var childs = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey]) !== -1) {\n            getChild(d);\n          }\n        });\n\n        function getChild(item) {\n          var sub = item[$scope.subKey];\n          if (sub && sub.length) {\n            sub.forEach(function (d) {\n              childs.push(d[$scope.valueKey]);\n              getChild(d);\n            });\n          }\n        }\n        return childs;\n      }\n\n      function getParents(itemValues) {\n        var parents = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey]) !== -1) {\n            var item = d;\n            while (item._parent) {\n              parents.push(item._parent[$scope.valueKey]);\n              item = item._parent;\n            }\n          }\n        });\n        return parents;\n      }\n\n      function toggleTree(e) {\n        if ($scope.disabled) {\n          return;\n        }\n\n        var target = (0, _jquery2['default'])(e.target);\n        var item = target.parents(itemCls);\n        var to = item.attr('data-to');\n        var froms = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n        var fromChilds = contentTarget.find(itemCls + '[data-from*=\"' + to + '_\"]');\n\n        if (!froms.length) {\n          froms = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n            data: subStore[to],\n            textKey: $scope.textKey,\n            valueKey: $scope.valueKey,\n            renderSub: true\n          }));\n          froms.insertAfter(item);\n          bindEvent(froms, item);\n          updateHideShow();\n        } else {\n          froms.toggleClass('hide');\n          fromChilds.toggleClass('child-hide');\n        }\n        target.parent().toggleClass('tree-open');\n      }\n\n      function bindEvent(items, parent) {\n        items.find('.tree-arrow-click').on('click', toggleTree);\n        items.find('input[type=\"checkbox\"]').on('change', function (e) {\n          checkedSub((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-to'), e.target.checked);\n          checkedParent((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-from'), e.target.checked);\n          updateModel();\n        });\n        if (parent) {\n          checkedSub(parent.attr('data-to'), parent.find('input').prop('checked'));\n        }\n        updateDisabled();\n      }\n\n      function updateModel() {\n        // console.log('update model');\n        var newModel = [];\n        var selectedes = contentTarget.find('input:checked');\n\n        selectedes.each(function () {\n          var item = (0, _jquery2['default'])(this).parents(itemCls);\n          var from = item.attr('data-from');\n          var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var parentValue = parent.attr('data-value');\n\n          if (hasParentSelected(item)) {\n            return true;\n          }\n          newModel.push(item.attr('data-value'));\n          return true;\n        });\n\n        $scope.$applyAsync(function () {\n          $scope.model = newModel;\n        });\n      }\n\n      function hasParentSelected(item) {\n        var from = item.attr('data-from');\n        var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n        var ret = false;\n\n        ret = !!(from && parent.length && parent.find('input').prop('checked'));\n\n        if (ret === false && from && parent.attr('data-from')) {\n          ret = hasParentSelected(parent);\n        }\n\n        return ret;\n      }\n\n      function checkedSub(to, checked) {\n        if (to) {\n          var items = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n          var item = contentTarget.find(itemCls + '[data-to=\"' + to + '\"]');\n\n          items.each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', checked);\n              checkedSub((0, _jquery2['default'])(this).attr('data-to'), checked);\n            }\n          });\n          item.find('.ma-checkbox').removeClass('has-sub');\n        }\n      }\n\n      function checkedParent(from) {\n        if (from) {\n          var items = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var maCheckbox = items.find('.ma-checkbox');\n          var data = getSubCheckedCount(from);\n\n          maCheckbox.removeClass('has-sub');\n          if (data.count <= 0) {\n            items.find('input').prop('checked', false);\n            if (data.sub) {\n              maCheckbox.addClass('has-sub');\n            }\n          } else if (data.count >= data.total) {\n            items.find('input').prop('checked', true);\n          } else {\n            items.find('input').prop('checked', false);\n            maCheckbox.addClass('has-sub');\n          }\n\n          checkedParent(items.attr('data-from'));\n        }\n      }\n\n      function getSubCheckedCount(from) {\n        var items = contentTarget.find(itemCls + '[data-from=\"' + from + '\"]');\n        var count = 0;\n        var total = 0;\n        var sub = 0;\n\n        items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            if ((0, _jquery2['default'])(this).find('input').prop('checked')) {\n              count++;\n            }\n            if ((0, _jquery2['default'])(this).find('.ma-checkbox').hasClass('has-sub')) {\n              sub++;\n            }\n            total++;\n          }\n        });\n        return {\n          total: total,\n          count: count,\n          sub: sub\n        };\n      }\n\n      function updateTree(items) {\n        var newItems = [];\n        var subKey = $scope.subKey;\n\n        subStore = {};\n\n        function getSub(items, parentItem, treeLevel) {\n          angular.each(items, function (d) {\n            var item = d;\n\n            newItems.push(item);\n\n            item._level = treeLevel;\n\n            if (item[subKey] && item[subKey].length) {\n              item.tagId = parentItem ? parentItem.tagId + '_' + angular.uuid() : 'tag_' + angular.uuid();\n              item._to = item.tagId;\n              item._sub = true;\n              subStore[item.tagId] = item[subKey];\n              angular.forEach(item[subKey], function (it) {\n                it._parent = item;\n                it._from = item.tagId;\n              });\n              getSub(item[subKey], item, treeLevel + 1);\n            }\n          });\n        }\n        getSub(items, null, 0);\n        return newItems;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/treeDirective.js\n// module id = xEAJ\n// module chunks = 17"],"sourceRoot":""}