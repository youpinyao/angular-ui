{"version":3,"sources":["webpack:///transfer2.min.js","webpack:///./src/components/transfer2/src/maTreeTpl.html","webpack:///./src/components/transfer2/src/maTreeTransfer2Tpl.html","webpack:///./src/components/transfer2/index.js","webpack:///./src/components/transfer2/src/itemTpl.html","webpack:///./src/components/transfer2/src/name.js","webpack:///./src/components/transfer2/src/treeTransfer2Directive.js","webpack:///./src/components/transfer2/src/treeDirective.js"],"names":["webpackJsonp","7fJ5","module","exports","BWKA","e2Tx","__webpack_require__","Object","defineProperty","value","_name","_name2","obj","__esModule","default","angular","config","run","oXUz","pL48","s87f","_interopRequireDefault","maTreeTransfer2","restrict","replace","scope","data","model","maModel","valueKey","textKey","subKey","disabled","leftTitle","rightTitle","template","_maTreeTransfer2Tpl2","controllerAs","controller","$scope","$element","$attrs","updateLeftSub","updateSub","updateRightSub","direction","level0Items","_jquery2","find","level0Values","selected","$ctrl","count","len","each","this","hasClass","push","attr","forEach","d","indexOf","isSelectedChangeCheckbox","toRight","$broadcast","isNull","concat","leftSelected","rightSelected","leftCheckbox","rightCheckbox","toLeft","oldModel","getModelWidthChild","newModel","selectWithChild","getSelectedWithChild","getSub","items","length","pushSub","checkSub","sub","dd","newSelected","filterChild","subInLen","s","splice","sameCount","updateLeftRigthData","leftData","extend","rightData","getParentAndChild","get","item","cItem","_parent","searchKey","leftSub","leftButtonDisabled","rightButtonDisabled","rightSub","leftHideItems","rightShowItems","$watch","link","element","attrs","ctrl","maTextKey","maValueKey","$observe","_jquery","_maTreeTransfer2Tpl","directive","$inject","xEAJ","maTree","showItems","hideItems","_maTreeTpl2","expandMatch","doExpand","expands","arrow","contentTarget","itemCls","parent","trigger","unexpand","removeClass","newItems","_from","addClass","updateDisabled","renderContent","_templateWeb2","render","_itemTpl2","bindEvent","html","updateHideShow","parents","getParents","childs","getChilds","isObject","_parents","_childs","itemValues","getChild","toggleTree","e","target","to","froms","fromChilds","toggleClass","subStore","renderSub","insertAfter","on","checkedSub","checked","checkedParent","updateModel","prop","from","hasParentSelected","$applyAsync","ret","maCheckbox","getSubCheckedCount","total","updateTree","parentItem","treeLevel","_level","tagId","uuid","_to","_sub","it","$on","isEmpty","_templateWeb","_maTreeTpl","_itemTpl"],"mappings":"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","file":"transfer2.min.js","sourcesContent":["webpackJsonp([17],{\n\n/***/ \"7fJ5\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"ma-tree-select transition-none\\\"\\n  ng-disabled=\\\"disabled\\\">\\n  <div class=\\\"custom-multi-select form-control ui-select-container ui-select-multiple select2 select2-container select2-container-multi ng-isolate-scope ng-not-empty ng-valid custom-tree-select custom-static-select\\\">\\n\\n    <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active select2-display-none\\\">\\n      <div class=\\\"search-container select2-search\\\">\\n        <div class=\\\"ma-input ma-input-search-normal\\\"\\n          ng-disabled=\\\"disabled\\\">\\n          <input type=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            role=\\\"combobox\\\"\\n            aria-expanded=\\\"true\\\"\\n            aria-owns=\\\"ui-select-choices-0\\\"\\n            aria-label=\\\"Select box\\\"\\n            class=\\\"select2-input ui-select-search ng-pristine ng-valid ng-empty ng-touched\\\"\\n            ng-model=\\\"$ctrl.searchKey\\\"\\n            ng-disabled=\\\"disabled\\\"\\n            ondrop=\\\"return false;\\\">\\n        </div>\\n      </div>\\n      <ul tabindex=\\\"-1\\\"\\n        ng-class=\\\"{'has-search': $ctrl.searchKey}\\\"\\n        class=\\\"ui-select-choices ui-select-choices-content select2-results ng-scope\\\">\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ \"BWKA\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"ma-transfer\\\">\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-left-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.leftSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.leftCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{leftTitle || '所有'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-left-tree\\\"\\n      ng-model=\\\"$ctrl.leftSelected\\\"\\n      ma-data=\\\"$ctrl.leftData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-hide-items=\\\"$ctrl.leftHideItems\\\"></ma-tree>\\n  </div>\\n  <div class=\\\"fl ma-transfer-center\\\">\\n    <div class=\\\"mb-20\\\">\\n      <ma-button ng-disabled=\\\"$ctrl.leftButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toRight($event)\\\">\\n        <span>添加</span>\\n        <ma-icon ma-type=\\\"arrowright\\\"></ma-icon>\\n      </ma-button>\\n    </div>\\n    <div>\\n      <ma-button ng-disabled=\\\"$ctrl.rightButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toLeft($event)\\\">\\n        <ma-icon ma-type=\\\"arrowleft\\\"></ma-icon>\\n        <span>删除</span>\\n      </ma-button>\\n    </div>\\n  </div>\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-right-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.rightSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.rightCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{rightTitle || '选中'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-right-tree\\\"\\n      ng-model=\\\"$ctrl.rightSelected\\\"\\n      ma-data=\\\"$ctrl.rightData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-show-items=\\\"$ctrl.rightShowItems\\\"></ma-tree>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n\n/***/ \"e2Tx\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\n__webpack_require__(\"xEAJ\");\n__webpack_require__(\"s87f\");\n\nexports['default'] = _name2['default'];\n\n/***/ }),\n\n/***/ \"oXUz\":\n/***/ (function(module, exports) {\n\nmodule.exports = \" {{each data}}\\n {{if !$value._parent || renderSub}}\\n<li class=\\\"ui-select-choices-row tree-level-{{$value._level}} {{$value._sub ? 'has-sub': ''}}\\\"\\n  data-value=\\\"{{$value[valueKey]}}\\\"\\n  data-from=\\\"{{$value._from}}\\\"\\n  data-to=\\\"{{$value._to}}\\\">\\n  <div class=\\\"select2-result-label ui-select-choices-row-inner\\\">\\n    <div>\\n      {{if $value._sub}}\\n      <i class=\\\"tree-arrow-click\\\">\\n        <i class=\\\"tree-arrow\\\"></i>\\n      </i>\\n      {{/if}}\\n      <!-- <div class=\\\"click-mask\\\"></div> -->\\n      <label class=\\\"ma-checkbox\\\">\\n        <input type=\\\"checkbox\\\" />\\n        <i class=\\\"ma-checkbox-appearance\\\"></i>\\n        <span>{{$value[textKey]}}</span>\\n      </label>\\n    </div>\\n  </div>\\n</li>\\n{{/if}}\\n{{/each}}\\n\";\n\n/***/ }),\n\n/***/ \"pL48\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.transfer2';\n\n/***/ }),\n\n/***/ \"s87f\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _jquery = __webpack_require__(\"7t+N\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTransfer2Tpl = __webpack_require__(\"BWKA\");\n\nvar _maTreeTransfer2Tpl2 = _interopRequireDefault(_maTreeTransfer2Tpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTreeTransfer2', maTreeTransfer2);\n\nmaTreeTransfer2.$inject = [];\n\nfunction maTreeTransfer2() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      maModel: '=maModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      leftTitle: '@maLeftTitle',\n      rightTitle: '@maRightTitle'\n    },\n    template: _maTreeTransfer2Tpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var $ctrl = this;\n\n      $ctrl.searchKey = '';\n\n      $ctrl.leftSub = false;\n      $ctrl.leftCheckbox = false;\n\n      $ctrl.leftButtonDisabled = true;\n      $ctrl.rightButtonDisabled = true;\n\n      $ctrl.rightSub = false;\n      $ctrl.rightCheckbox = false;\n\n      $ctrl.toRight = toRight;\n      $ctrl.toLeft = toLeft;\n\n      $ctrl.leftSelected = [];\n      $ctrl.rightSelected = [];\n\n      $ctrl.leftData = [];\n      $ctrl.rightData = [];\n\n      $ctrl.leftHideItems = [];\n      $ctrl.rightShowItems = [];\n\n      $scope.$watch('data', function (d) {\n        // console.log('transfer2 data', d);\n        updateLeftRigthData();\n      });\n\n      $scope.$watch('model', function (d) {\n        console.log('transfer2 model', d);\n\n        // 过滤掉父子同在\n        var newModel = filterChild();\n\n        if (newModel) {\n          $scope.model = newModel;\n          return;\n        }\n\n        $ctrl.leftHideItems = d || [];\n        $ctrl.rightShowItems = d || [];\n\n        if ($attrs.maModel) {\n          $scope.maModel = getParentAndChild(d);\n        }\n      });\n\n      $scope.$watch('$ctrl.leftCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.leftSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.leftSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.rightCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.rightSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.rightSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.leftSelected', function (d) {\n        $ctrl.leftButtonDisabled = !(d && d.length);\n        updateLeftSub();\n      });\n\n      $scope.$watch('$ctrl.rightSelected', function (d) {\n        $ctrl.rightButtonDisabled = !(d && d.length);\n        updateRightSub();\n      });\n\n      function updateLeftSub() {\n        updateSub('left');\n      }\n\n      function updateRightSub() {\n        updateSub('right');\n      }\n\n      function updateSub(direction) {\n        var level0Items = (0, _jquery2['default'])($element).find('.ma-transfer-' + direction + '-tree.ma-tree-select .tree-level-0');\n        var level0Values = [];\n        var selected = $ctrl[direction + 'Selected'] || [];\n        var count = 0;\n        var len = 0;\n\n        level0Items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            level0Values.push((0, _jquery2['default'])(this).attr('data-value'));\n          }\n        });\n\n        level0Values.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            count++;\n          }\n          len++;\n        });\n\n        if (len > 0) {\n          if (count > 0 && count < len) {\n            $ctrl[direction + 'Sub'] = true;\n          } else {\n            $ctrl[direction + 'Sub'] = false;\n          }\n          if (count === len) {\n            if ($ctrl[direction + 'Checkbox'] === false) {\n              $ctrl[direction + 'Checkbox'] = true;\n              $scope.isSelectedChangeCheckbox = true;\n            }\n          } else if ($ctrl[direction + 'Checkbox'] === true) {\n            $ctrl[direction + 'Checkbox'] = false;\n            $scope.isSelectedChangeCheckbox = true;\n          }\n        }\n      }\n\n      function toRight() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        $scope.model = $scope.model.concat($ctrl.leftSelected);\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function toLeft() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        var oldModel = getModelWidthChild();\n        var newModel = [];\n        var selectWithChild = getSelectedWithChild();\n\n        angular.each(oldModel, function (d) {\n          if (selectWithChild.indexOf(d) === -1) {\n            newModel.push(d);\n          }\n        });\n\n        $scope.model = newModel;\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function getModelWidthChild() {\n        var model = $scope.model || [];\n        var newModel = [];\n\n        function getSub(items) {\n          angular.each(items, function (d) {\n            if (model.indexOf(d[$scope.valueKey] + '') !== -1) {\n              if (d[$scope.subKey] && d[$scope.subKey].length) {\n                pushSub(d[$scope.subKey]);\n              } else {\n                newModel.push(d[$scope.valueKey] + '');\n              }\n            } else {\n              getSub(d[$scope.subKey]);\n            }\n          });\n        }\n\n        function pushSub(items) {\n          angular.each(items, function (d) {\n            if (d[$scope.subKey] && d[$scope.subKey].length) {\n              pushSub(d[$scope.subKey]);\n            } else {\n              newModel.push(d[$scope.valueKey] + '');\n            }\n          });\n        }\n\n        getSub($scope.data);\n\n        return newModel;\n      }\n\n      function getSelectedWithChild() {\n        var newSelected = [];\n        var selected = $ctrl.rightSelected || [];\n\n        function checkSub(items) {\n          angular.each(items, function (d) {\n            var sub = d[$scope.subKey];\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1 && sub && sub.length) {\n              pushSub(sub);\n            } else if (sub && sub.length) {\n              checkSub(sub);\n            }\n          });\n        }\n\n        function pushSub(sub) {\n          angular.each(sub, function (dd) {\n            newSelected.push(dd[$scope.valueKey] + '');\n            if (dd[$scope.subKey] && dd[$scope.subKey].length) {\n              pushSub(dd[$scope.subKey]);\n            }\n          });\n        }\n\n        checkSub($scope.data);\n\n        return selected.concat(newSelected);\n      }\n\n      function filterChild() {\n        var selected = $scope.model || [];\n        var newModel = [];\n        var splicedArray = [];\n        var sameCount = 0;\n\n        function checkSub(items) {\n          var subInLen = 0;\n          angular.forEach(items, function (d) {\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1) {\n              newModel.push(d[$scope.valueKey] + '');\n              subInLen++;\n            } else {\n              var sub = d[$scope.subKey];\n              if (sub && sub.length) {\n                var _subInLen = checkSub(sub);\n                // 如果子全部在，就只存在父级\n                if (_subInLen >= sub.length) {\n                  newModel.push(d[$scope.valueKey] + '');\n                  angular.each(sub, function (s) {\n                    if (newModel.indexOf(s[$scope.valueKey] + '') !== -1) {\n                      newModel.splice(newModel.indexOf(s[$scope.valueKey] + ''), 1);\n                    }\n                  });\n                }\n              }\n            }\n          });\n          return subInLen;\n        }\n\n        checkSub($scope.data);\n\n        newModel.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            sameCount++;\n          }\n        });\n\n        return sameCount < selected.length ? newModel : false;\n      }\n\n      function updateLeftRigthData() {\n        var leftData = _jquery2['default'].extend(true, [], $scope.data);\n        var rightData = _jquery2['default'].extend(true, [], $scope.data);\n\n        $ctrl.leftData = leftData;\n        $ctrl.rightData = rightData;\n      }\n\n      function getParentAndChild(selected) {\n        var newSelected = [];\n\n        function get(items) {\n          angular.each(items, function (item) {\n            if (selected.indexOf(item[$scope.valueKey] + '') !== -1) {\n              var cItem = item;\n\n              newSelected.push(item[$scope.valueKey] + '');\n\n              while (cItem._parent) {\n                if (newSelected.indexOf(cItem._parent[$scope.valueKey] + '') === -1) {\n                  newSelected.push(cItem._parent[$scope.valueKey] + '');\n                }\n                cItem = cItem._parent;\n              }\n\n              getSub(item[$scope.subKey]);\n            }\n\n            if (item[$scope.subKey] && item[$scope.subKey].length) {\n              get(item[$scope.subKey]);\n            }\n          });\n        }\n\n        function getSub(sub) {\n          if (sub && sub.length) {\n            angular.each(sub, function (item) {\n              newSelected.push(item[$scope.valueKey] + '');\n              getSub(item[$scope.subKey]);\n            });\n          }\n        }\n\n        get($ctrl.leftData);\n\n        return newSelected;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"xEAJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _name = __webpack_require__(\"pL48\");\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _templateWeb = __webpack_require__(\"H+C6\");\n\nvar _templateWeb2 = _interopRequireDefault(_templateWeb);\n\nvar _jquery = __webpack_require__(\"7t+N\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTpl = __webpack_require__(\"7fJ5\");\n\nvar _maTreeTpl2 = _interopRequireDefault(_maTreeTpl);\n\nvar _itemTpl = __webpack_require__(\"oXUz\");\n\nvar _itemTpl2 = _interopRequireDefault(_itemTpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTree', maTree);\n\nmaTree.$inject = [];\n\nfunction maTree() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      showItems: '=maShowItems',\n      hideItems: '=maHideItems'\n    },\n    template: _maTreeTpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function ($scope, $element) {\n      var $ctrl = this;\n      var contentTarget = (0, _jquery2['default'])($element).find('.ui-select-choices-content');\n      var itemCls = '.ui-select-choices-row';\n      var subStore = {};\n\n      $ctrl.searchKey = '';\n\n      $scope.$on('search.clear', function () {\n        $ctrl.searchKey = '';\n      });\n\n      $scope.$watch('$ctrl.searchKey', function (d) {\n        expandMatch(d);\n      });\n      $scope.$watch('disabled', updateDisabled);\n\n      $scope.$watch('data', function (d) {\n        var items = updateTree(d);\n\n        $scope.newItems = items;\n        renderContent(items);\n      });\n\n      $scope.$watch('showItems', function (d) {\n        // console.log('show items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n      $scope.$watch('hideItems', function (d) {\n        // console.log('hide items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n\n      $scope.$watch('model', function (d) {\n        // console.log('tree model', d);\n\n        // 全不选\n        if (angular.isEmpty(d)) {\n          contentTarget.find(itemCls).each(function () {\n            // if (!$(this).hasClass('hidden')) {\n            (0, _jquery2['default'])(this).find('input').prop('checked', false);\n            // }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n        }\n\n        // 全选\n        if (d === 'all') {\n          var newModel = [];\n          contentTarget.find(itemCls).each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', true);\n              newModel.push((0, _jquery2['default'])(this).attr('data-value'));\n            }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n\n          $scope.model = newModel;\n        }\n      });\n\n      function expandMatch(searchKey) {\n        contentTarget.find('.search-match').removeClass('search-match');\n        if (angular.isNull(searchKey)) {\n          return;\n        }\n\n        var expands = [];\n        var unexpand = [];\n\n        $scope.newItems.forEach(function (d) {\n          var item = d;\n\n          if ((item[$scope.textKey] + '').indexOf(searchKey) !== -1 && item._from) {\n            expands.push(item._from);\n            while (item._parent && item._parent._from) {\n              expands.push(item._parent._from);\n              item = item._parent;\n            }\n          }\n        });\n\n        function doExpand() {\n          expands.forEach(function (d) {\n            var arrow = contentTarget.find(itemCls + '[data-to=\"' + d + '\"] .tree-arrow-click');\n\n            if (arrow.length) {\n              if (!arrow.parent().hasClass('tree-open')) {\n                arrow.trigger('click');\n              }\n            } else {\n              unexpand.push(d);\n            }\n          });\n          expands = unexpand;\n          unexpand = [];\n          if (expands.length) {\n            doExpand();\n          }\n        }\n\n        doExpand();\n\n        // 设置match class\n        $scope.newItems.forEach(function (d) {\n          if ((d[$scope.textKey] + '').indexOf(searchKey) !== -1) {\n            contentTarget.find(itemCls + '[data-value=\"' + (d[$scope.valueKey] + '') + '\"]').addClass('search-match');\n          }\n        });\n      }\n\n      function updateDisabled() {\n        if ($scope.disabled) {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', true);\n        } else {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', false);\n        }\n      }\n\n      function renderContent(data) {\n        var items = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n          data: data,\n          textKey: $scope.textKey,\n          valueKey: $scope.valueKey\n        }));\n\n        bindEvent(items);\n\n        contentTarget.html(items);\n\n        updateHideShow();\n      }\n\n      function updateHideShow() {\n        // 如果有要隐藏的隐藏\n        if ($scope.hideItems) {\n          var parents = getParents($scope.hideItems);\n          var childs = getChilds($scope.hideItems);\n\n          contentTarget.find(itemCls).removeClass('hidden');\n          $scope.hideItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] + '' : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n            item.addClass('hidden');\n          });\n          childs.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').addClass('hidden');\n          });\n          parents.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n\n        // 如果有要现实的显示\n        if ($scope.showItems) {\n          var _parents = getParents($scope.showItems);\n          var _childs = getChilds($scope.showItems);\n\n          contentTarget.find(itemCls).addClass('hidden');\n\n          $scope.showItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] + '' : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n\n            item.removeClass('hidden');\n          });\n\n          _parents.concat(_childs).forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n      }\n\n      function getChilds(itemValues) {\n        var childs = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            getChild(d);\n          }\n        });\n\n        function getChild(item) {\n          var sub = item[$scope.subKey];\n          if (sub && sub.length) {\n            sub.forEach(function (d) {\n              childs.push(d[$scope.valueKey] + '');\n              getChild(d);\n            });\n          }\n        }\n        return childs;\n      }\n\n      function getParents(itemValues) {\n        var parents = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            var item = d;\n            while (item._parent) {\n              parents.push(item._parent[$scope.valueKey] + '');\n              item = item._parent;\n            }\n          }\n        });\n        return parents;\n      }\n\n      function toggleTree(e) {\n        if ($scope.disabled) {\n          return;\n        }\n\n        var target = (0, _jquery2['default'])(e.target);\n        var item = target.parents(itemCls);\n        var to = item.attr('data-to');\n        var froms = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n        var fromChilds = contentTarget.find(itemCls + '[data-from*=\"' + to + '_\"]');\n\n        if (!froms.length) {\n          froms = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n            data: subStore[to],\n            textKey: $scope.textKey,\n            valueKey: $scope.valueKey,\n            renderSub: true\n          }));\n          froms.insertAfter(item);\n          bindEvent(froms, item);\n          updateHideShow();\n        } else {\n          froms.toggleClass('hide');\n          fromChilds.toggleClass('child-hide');\n        }\n        target.parent().toggleClass('tree-open');\n      }\n\n      function bindEvent(items, parent) {\n        items.find('.tree-arrow-click').on('click', toggleTree);\n        items.find('input[type=\"checkbox\"]').on('change', function (e) {\n          checkedSub((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-to'), e.target.checked);\n          checkedParent((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-from'), e.target.checked);\n          updateModel();\n        });\n        if (parent) {\n          checkedSub(parent.attr('data-to'), parent.find('input').prop('checked'));\n        }\n        updateDisabled();\n      }\n\n      function updateModel() {\n        // console.log('update model');\n        var newModel = [];\n        var selectedes = contentTarget.find('input:checked');\n\n        selectedes.each(function () {\n          var item = (0, _jquery2['default'])(this).parents(itemCls);\n          var from = item.attr('data-from');\n          var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var parentValue = parent.attr('data-value');\n\n          if (hasParentSelected(item)) {\n            return true;\n          }\n          newModel.push(item.attr('data-value'));\n          return true;\n        });\n\n        $scope.$applyAsync(function () {\n          $scope.model = newModel;\n        });\n      }\n\n      function hasParentSelected(item) {\n        var from = item.attr('data-from');\n        var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n        var ret = false;\n\n        ret = !!(from && parent.length && parent.find('input').prop('checked'));\n\n        if (ret === false && from && parent.attr('data-from')) {\n          ret = hasParentSelected(parent);\n        }\n\n        return ret;\n      }\n\n      function checkedSub(to, checked) {\n        if (to) {\n          var items = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n          var item = contentTarget.find(itemCls + '[data-to=\"' + to + '\"]');\n\n          items.each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', checked);\n              checkedSub((0, _jquery2['default'])(this).attr('data-to'), checked);\n            }\n          });\n          item.find('.ma-checkbox').removeClass('has-sub');\n        }\n      }\n\n      function checkedParent(from) {\n        if (from) {\n          var items = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var maCheckbox = items.find('.ma-checkbox');\n          var data = getSubCheckedCount(from);\n\n          maCheckbox.removeClass('has-sub');\n          if (data.count <= 0) {\n            items.find('input').prop('checked', false);\n            if (data.sub) {\n              maCheckbox.addClass('has-sub');\n            }\n          } else if (data.count >= data.total) {\n            items.find('input').prop('checked', true);\n          } else {\n            items.find('input').prop('checked', false);\n            maCheckbox.addClass('has-sub');\n          }\n\n          checkedParent(items.attr('data-from'));\n        }\n      }\n\n      function getSubCheckedCount(from) {\n        var items = contentTarget.find(itemCls + '[data-from=\"' + from + '\"]');\n        var count = 0;\n        var total = 0;\n        var sub = 0;\n\n        items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            if ((0, _jquery2['default'])(this).find('input').prop('checked')) {\n              count++;\n            }\n            if ((0, _jquery2['default'])(this).find('.ma-checkbox').hasClass('has-sub')) {\n              sub++;\n            }\n            total++;\n          }\n        });\n        return {\n          total: total,\n          count: count,\n          sub: sub\n        };\n      }\n\n      function updateTree(items) {\n        var newItems = [];\n        var subKey = $scope.subKey;\n\n        subStore = {};\n\n        function getSub(items, parentItem, treeLevel) {\n          angular.each(items, function (d) {\n            var item = d;\n\n            newItems.push(item);\n\n            item._level = treeLevel;\n\n            if (item[subKey] && item[subKey].length) {\n              item.tagId = parentItem ? parentItem.tagId + '_' + angular.uuid() : 'tag_' + angular.uuid();\n              item._to = item.tagId;\n              item._sub = true;\n              subStore[item.tagId] = item[subKey];\n              angular.forEach(item[subKey], function (it) {\n                it._parent = item;\n                it._from = item.tagId;\n              });\n              getSub(item[subKey], item, treeLevel + 1);\n            }\n          });\n        }\n        getSub(items, null, 0);\n        return newItems;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n/***/ })\n\n},[\"e2Tx\"]);\n\n\n// WEBPACK FOOTER //\n// transfer2.min.js","module.exports = \"<div class=\\\"ma-tree-select transition-none\\\"\\n  ng-disabled=\\\"disabled\\\">\\n  <div class=\\\"custom-multi-select form-control ui-select-container ui-select-multiple select2 select2-container select2-container-multi ng-isolate-scope ng-not-empty ng-valid custom-tree-select custom-static-select\\\">\\n\\n    <div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active select2-display-none\\\">\\n      <div class=\\\"search-container select2-search\\\">\\n        <div class=\\\"ma-input ma-input-search-normal\\\"\\n          ng-disabled=\\\"disabled\\\">\\n          <input type=\\\"text\\\"\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            role=\\\"combobox\\\"\\n            aria-expanded=\\\"true\\\"\\n            aria-owns=\\\"ui-select-choices-0\\\"\\n            aria-label=\\\"Select box\\\"\\n            class=\\\"select2-input ui-select-search ng-pristine ng-valid ng-empty ng-touched\\\"\\n            ng-model=\\\"$ctrl.searchKey\\\"\\n            ng-disabled=\\\"disabled\\\"\\n            ondrop=\\\"return false;\\\">\\n        </div>\\n      </div>\\n      <ul tabindex=\\\"-1\\\"\\n        ng-class=\\\"{'has-search': $ctrl.searchKey}\\\"\\n        class=\\\"ui-select-choices ui-select-choices-content select2-results ng-scope\\\">\\n\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/maTreeTpl.html\n// module id = 7fJ5\n// module chunks = 17","module.exports = \"<div class=\\\"ma-transfer\\\">\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-left-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.leftSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.leftCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{leftTitle || '所有'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-left-tree\\\"\\n      ng-model=\\\"$ctrl.leftSelected\\\"\\n      ma-data=\\\"$ctrl.leftData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-hide-items=\\\"$ctrl.leftHideItems\\\"></ma-tree>\\n  </div>\\n  <div class=\\\"fl ma-transfer-center\\\">\\n    <div class=\\\"mb-20\\\">\\n      <ma-button ng-disabled=\\\"$ctrl.leftButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toRight($event)\\\">\\n        <span>添加</span>\\n        <ma-icon ma-type=\\\"arrowright\\\"></ma-icon>\\n      </ma-button>\\n    </div>\\n    <div>\\n      <ma-button ng-disabled=\\\"$ctrl.rightButtonDisabled\\\"\\n        ma-click=\\\"$ctrl.toLeft($event)\\\">\\n        <ma-icon ma-type=\\\"arrowleft\\\"></ma-icon>\\n        <span>删除</span>\\n      </ma-button>\\n    </div>\\n  </div>\\n  <div class=\\\"fl\\\">\\n    <div class=\\\"ma-transfer-right-result\\\">\\n      <ma-checkbox ng-disabled=\\\"disabled\\\"\\n        ng-class=\\\"{\\n          'has-sub': $ctrl.rightSub,\\n        }\\\"\\n        ng-model=\\\"$ctrl.rightCheckbox\\\">\\n      </ma-checkbox>\\n\\n      <span class=\\\"ma-transfer-title\\\">{{rightTitle || '选中'}}</span>\\n    </div>\\n    <ma-tree ng-disabled=\\\"disabled\\\"\\n      class=\\\"ma-transfer-right-tree\\\"\\n      ng-model=\\\"$ctrl.rightSelected\\\"\\n      ma-data=\\\"$ctrl.rightData\\\"\\n      ma-value-key=\\\"{{valueKey}}\\\"\\n      ma-sub-key=\\\"{{subKey}}\\\"\\n      ma-text-key=\\\"{{textKey}}\\\"\\n      ma-show-items=\\\"$ctrl.rightShowItems\\\"></ma-tree>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/maTreeTransfer2Tpl.html\n// module id = BWKA\n// module chunks = 17","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _name = require('./src/name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default'], []).config(function () {}).run(function () {});\n\nrequire('./src/treeDirective.js');\nrequire('./src/treeTransfer2Directive.js');\n\nexports['default'] = _name2['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/index.js\n// module id = e2Tx\n// module chunks = 17","module.exports = \" {{each data}}\\n {{if !$value._parent || renderSub}}\\n<li class=\\\"ui-select-choices-row tree-level-{{$value._level}} {{$value._sub ? 'has-sub': ''}}\\\"\\n  data-value=\\\"{{$value[valueKey]}}\\\"\\n  data-from=\\\"{{$value._from}}\\\"\\n  data-to=\\\"{{$value._to}}\\\">\\n  <div class=\\\"select2-result-label ui-select-choices-row-inner\\\">\\n    <div>\\n      {{if $value._sub}}\\n      <i class=\\\"tree-arrow-click\\\">\\n        <i class=\\\"tree-arrow\\\"></i>\\n      </i>\\n      {{/if}}\\n      <!-- <div class=\\\"click-mask\\\"></div> -->\\n      <label class=\\\"ma-checkbox\\\">\\n        <input type=\\\"checkbox\\\" />\\n        <i class=\\\"ma-checkbox-appearance\\\"></i>\\n        <span>{{$value[textKey]}}</span>\\n      </label>\\n    </div>\\n  </div>\\n</li>\\n{{/if}}\\n{{/each}}\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/itemTpl.html\n// module id = oXUz\n// module chunks = 17","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = 'meetyou.angular.ui.transfer2';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/name.js\n// module id = pL48\n// module chunks = 17","'use strict';\n\nvar _name = require('./name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTransfer2Tpl = require('./maTreeTransfer2Tpl.html');\n\nvar _maTreeTransfer2Tpl2 = _interopRequireDefault(_maTreeTransfer2Tpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTreeTransfer2', maTreeTransfer2);\n\nmaTreeTransfer2.$inject = [];\n\nfunction maTreeTransfer2() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      maModel: '=maModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      leftTitle: '@maLeftTitle',\n      rightTitle: '@maRightTitle'\n    },\n    template: _maTreeTransfer2Tpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', '$attrs', function ($scope, $element, $attrs) {\n      var $ctrl = this;\n\n      $ctrl.searchKey = '';\n\n      $ctrl.leftSub = false;\n      $ctrl.leftCheckbox = false;\n\n      $ctrl.leftButtonDisabled = true;\n      $ctrl.rightButtonDisabled = true;\n\n      $ctrl.rightSub = false;\n      $ctrl.rightCheckbox = false;\n\n      $ctrl.toRight = toRight;\n      $ctrl.toLeft = toLeft;\n\n      $ctrl.leftSelected = [];\n      $ctrl.rightSelected = [];\n\n      $ctrl.leftData = [];\n      $ctrl.rightData = [];\n\n      $ctrl.leftHideItems = [];\n      $ctrl.rightShowItems = [];\n\n      $scope.$watch('data', function (d) {\n        // console.log('transfer2 data', d);\n        updateLeftRigthData();\n      });\n\n      $scope.$watch('model', function (d) {\n        console.log('transfer2 model', d);\n\n        // 过滤掉父子同在\n        var newModel = filterChild();\n\n        if (newModel) {\n          $scope.model = newModel;\n          return;\n        }\n\n        $ctrl.leftHideItems = d || [];\n        $ctrl.rightShowItems = d || [];\n\n        if ($attrs.maModel) {\n          $scope.maModel = getParentAndChild(d);\n        }\n      });\n\n      $scope.$watch('$ctrl.leftCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.leftSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.leftSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.rightCheckbox', function (d) {\n        if ($scope.isSelectedChangeCheckbox) {\n          $scope.isSelectedChangeCheckbox = false;\n          return;\n        }\n\n        if (d === true) {\n          $ctrl.rightSelected = 'all';\n        }\n        if (d === false) {\n          $ctrl.rightSelected = [];\n        }\n      });\n\n      $scope.$watch('$ctrl.leftSelected', function (d) {\n        $ctrl.leftButtonDisabled = !(d && d.length);\n        updateLeftSub();\n      });\n\n      $scope.$watch('$ctrl.rightSelected', function (d) {\n        $ctrl.rightButtonDisabled = !(d && d.length);\n        updateRightSub();\n      });\n\n      function updateLeftSub() {\n        updateSub('left');\n      }\n\n      function updateRightSub() {\n        updateSub('right');\n      }\n\n      function updateSub(direction) {\n        var level0Items = (0, _jquery2['default'])($element).find('.ma-transfer-' + direction + '-tree.ma-tree-select .tree-level-0');\n        var level0Values = [];\n        var selected = $ctrl[direction + 'Selected'] || [];\n        var count = 0;\n        var len = 0;\n\n        level0Items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            level0Values.push((0, _jquery2['default'])(this).attr('data-value'));\n          }\n        });\n\n        level0Values.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            count++;\n          }\n          len++;\n        });\n\n        if (len > 0) {\n          if (count > 0 && count < len) {\n            $ctrl[direction + 'Sub'] = true;\n          } else {\n            $ctrl[direction + 'Sub'] = false;\n          }\n          if (count === len) {\n            if ($ctrl[direction + 'Checkbox'] === false) {\n              $ctrl[direction + 'Checkbox'] = true;\n              $scope.isSelectedChangeCheckbox = true;\n            }\n          } else if ($ctrl[direction + 'Checkbox'] === true) {\n            $ctrl[direction + 'Checkbox'] = false;\n            $scope.isSelectedChangeCheckbox = true;\n          }\n        }\n      }\n\n      function toRight() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        $scope.model = $scope.model.concat($ctrl.leftSelected);\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function toLeft() {\n        $scope.$broadcast('search.clear');\n        if (angular.isNull($scope.model)) {\n          $scope.model = [];\n        }\n        var oldModel = getModelWidthChild();\n        var newModel = [];\n        var selectWithChild = getSelectedWithChild();\n\n        angular.each(oldModel, function (d) {\n          if (selectWithChild.indexOf(d) === -1) {\n            newModel.push(d);\n          }\n        });\n\n        $scope.model = newModel;\n        $ctrl.leftSelected = [];\n        $ctrl.rightSelected = [];\n        $ctrl.leftCheckbox = false;\n        $ctrl.rightCheckbox = false;\n      }\n\n      function getModelWidthChild() {\n        var model = $scope.model || [];\n        var newModel = [];\n\n        function getSub(items) {\n          angular.each(items, function (d) {\n            if (model.indexOf(d[$scope.valueKey] + '') !== -1) {\n              if (d[$scope.subKey] && d[$scope.subKey].length) {\n                pushSub(d[$scope.subKey]);\n              } else {\n                newModel.push(d[$scope.valueKey] + '');\n              }\n            } else {\n              getSub(d[$scope.subKey]);\n            }\n          });\n        }\n\n        function pushSub(items) {\n          angular.each(items, function (d) {\n            if (d[$scope.subKey] && d[$scope.subKey].length) {\n              pushSub(d[$scope.subKey]);\n            } else {\n              newModel.push(d[$scope.valueKey] + '');\n            }\n          });\n        }\n\n        getSub($scope.data);\n\n        return newModel;\n      }\n\n      function getSelectedWithChild() {\n        var newSelected = [];\n        var selected = $ctrl.rightSelected || [];\n\n        function checkSub(items) {\n          angular.each(items, function (d) {\n            var sub = d[$scope.subKey];\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1 && sub && sub.length) {\n              pushSub(sub);\n            } else if (sub && sub.length) {\n              checkSub(sub);\n            }\n          });\n        }\n\n        function pushSub(sub) {\n          angular.each(sub, function (dd) {\n            newSelected.push(dd[$scope.valueKey] + '');\n            if (dd[$scope.subKey] && dd[$scope.subKey].length) {\n              pushSub(dd[$scope.subKey]);\n            }\n          });\n        }\n\n        checkSub($scope.data);\n\n        return selected.concat(newSelected);\n      }\n\n      function filterChild() {\n        var selected = $scope.model || [];\n        var newModel = [];\n        var splicedArray = [];\n        var sameCount = 0;\n\n        function checkSub(items) {\n          var subInLen = 0;\n          angular.forEach(items, function (d) {\n            if (selected.indexOf(d[$scope.valueKey] + '') !== -1) {\n              newModel.push(d[$scope.valueKey] + '');\n              subInLen++;\n            } else {\n              var sub = d[$scope.subKey];\n              if (sub && sub.length) {\n                var _subInLen = checkSub(sub);\n                // 如果子全部在，就只存在父级\n                if (_subInLen >= sub.length) {\n                  newModel.push(d[$scope.valueKey] + '');\n                  angular.each(sub, function (s) {\n                    if (newModel.indexOf(s[$scope.valueKey] + '') !== -1) {\n                      newModel.splice(newModel.indexOf(s[$scope.valueKey] + ''), 1);\n                    }\n                  });\n                }\n              }\n            }\n          });\n          return subInLen;\n        }\n\n        checkSub($scope.data);\n\n        newModel.forEach(function (d) {\n          if (selected.indexOf(d) !== -1) {\n            sameCount++;\n          }\n        });\n\n        return sameCount < selected.length ? newModel : false;\n      }\n\n      function updateLeftRigthData() {\n        var leftData = _jquery2['default'].extend(true, [], $scope.data);\n        var rightData = _jquery2['default'].extend(true, [], $scope.data);\n\n        $ctrl.leftData = leftData;\n        $ctrl.rightData = rightData;\n      }\n\n      function getParentAndChild(selected) {\n        var newSelected = [];\n\n        function get(items) {\n          angular.each(items, function (item) {\n            if (selected.indexOf(item[$scope.valueKey] + '') !== -1) {\n              var cItem = item;\n\n              newSelected.push(item[$scope.valueKey] + '');\n\n              while (cItem._parent) {\n                if (newSelected.indexOf(cItem._parent[$scope.valueKey] + '') === -1) {\n                  newSelected.push(cItem._parent[$scope.valueKey] + '');\n                }\n                cItem = cItem._parent;\n              }\n\n              getSub(item[$scope.subKey]);\n            }\n\n            if (item[$scope.subKey] && item[$scope.subKey].length) {\n              get(item[$scope.subKey]);\n            }\n          });\n        }\n\n        function getSub(sub) {\n          if (sub && sub.length) {\n            angular.each(sub, function (item) {\n              newSelected.push(item[$scope.valueKey] + '');\n              getSub(item[$scope.subKey]);\n            });\n          }\n        }\n\n        get($ctrl.leftData);\n\n        return newSelected;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/treeTransfer2Directive.js\n// module id = s87f\n// module chunks = 17","'use strict';\n\nvar _name = require('./name.js');\n\nvar _name2 = _interopRequireDefault(_name);\n\nvar _templateWeb = require('art-template/lib/template-web.js');\n\nvar _templateWeb2 = _interopRequireDefault(_templateWeb);\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _maTreeTpl = require('./maTreeTpl.html');\n\nvar _maTreeTpl2 = _interopRequireDefault(_maTreeTpl);\n\nvar _itemTpl = require('./itemTpl.html');\n\nvar _itemTpl2 = _interopRequireDefault(_itemTpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nangular.module(_name2['default']).directive('maTree', maTree);\n\nmaTree.$inject = [];\n\nfunction maTree() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      data: '=maData',\n      model: '=ngModel',\n      valueKey: '@maValueKey',\n      textKey: '@maTextKey',\n      subKey: '@maSubKey',\n      disabled: '=ngDisabled',\n\n      showItems: '=maShowItems',\n      hideItems: '=maHideItems'\n    },\n    template: _maTreeTpl2['default'],\n    controllerAs: '$ctrl',\n    controller: ['$scope', '$element', function ($scope, $element) {\n      var $ctrl = this;\n      var contentTarget = (0, _jquery2['default'])($element).find('.ui-select-choices-content');\n      var itemCls = '.ui-select-choices-row';\n      var subStore = {};\n\n      $ctrl.searchKey = '';\n\n      $scope.$on('search.clear', function () {\n        $ctrl.searchKey = '';\n      });\n\n      $scope.$watch('$ctrl.searchKey', function (d) {\n        expandMatch(d);\n      });\n      $scope.$watch('disabled', updateDisabled);\n\n      $scope.$watch('data', function (d) {\n        var items = updateTree(d);\n\n        $scope.newItems = items;\n        renderContent(items);\n      });\n\n      $scope.$watch('showItems', function (d) {\n        // console.log('show items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n      $scope.$watch('hideItems', function (d) {\n        // console.log('hide items', d);\n        if (d) {\n          updateHideShow();\n        }\n      });\n\n      $scope.$watch('model', function (d) {\n        // console.log('tree model', d);\n\n        // 全不选\n        if (angular.isEmpty(d)) {\n          contentTarget.find(itemCls).each(function () {\n            // if (!$(this).hasClass('hidden')) {\n            (0, _jquery2['default'])(this).find('input').prop('checked', false);\n            // }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n        }\n\n        // 全选\n        if (d === 'all') {\n          var newModel = [];\n          contentTarget.find(itemCls).each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', true);\n              newModel.push((0, _jquery2['default'])(this).attr('data-value'));\n            }\n          });\n          contentTarget.find('.ma-checkbox').removeClass('has-sub');\n\n          $scope.model = newModel;\n        }\n      });\n\n      function expandMatch(searchKey) {\n        contentTarget.find('.search-match').removeClass('search-match');\n        if (angular.isNull(searchKey)) {\n          return;\n        }\n\n        var expands = [];\n        var unexpand = [];\n\n        $scope.newItems.forEach(function (d) {\n          var item = d;\n\n          if ((item[$scope.textKey] + '').indexOf(searchKey) !== -1 && item._from) {\n            expands.push(item._from);\n            while (item._parent && item._parent._from) {\n              expands.push(item._parent._from);\n              item = item._parent;\n            }\n          }\n        });\n\n        function doExpand() {\n          expands.forEach(function (d) {\n            var arrow = contentTarget.find(itemCls + '[data-to=\"' + d + '\"] .tree-arrow-click');\n\n            if (arrow.length) {\n              if (!arrow.parent().hasClass('tree-open')) {\n                arrow.trigger('click');\n              }\n            } else {\n              unexpand.push(d);\n            }\n          });\n          expands = unexpand;\n          unexpand = [];\n          if (expands.length) {\n            doExpand();\n          }\n        }\n\n        doExpand();\n\n        // 设置match class\n        $scope.newItems.forEach(function (d) {\n          if ((d[$scope.textKey] + '').indexOf(searchKey) !== -1) {\n            contentTarget.find(itemCls + '[data-value=\"' + (d[$scope.valueKey] + '') + '\"]').addClass('search-match');\n          }\n        });\n      }\n\n      function updateDisabled() {\n        if ($scope.disabled) {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', true);\n        } else {\n          contentTarget.find('input, .ma-checkbox').attr('disabled', false);\n        }\n      }\n\n      function renderContent(data) {\n        var items = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n          data: data,\n          textKey: $scope.textKey,\n          valueKey: $scope.valueKey\n        }));\n\n        bindEvent(items);\n\n        contentTarget.html(items);\n\n        updateHideShow();\n      }\n\n      function updateHideShow() {\n        // 如果有要隐藏的隐藏\n        if ($scope.hideItems) {\n          var parents = getParents($scope.hideItems);\n          var childs = getChilds($scope.hideItems);\n\n          contentTarget.find(itemCls).removeClass('hidden');\n          $scope.hideItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] + '' : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n            item.addClass('hidden');\n          });\n          childs.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').addClass('hidden');\n          });\n          parents.forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n\n        // 如果有要现实的显示\n        if ($scope.showItems) {\n          var _parents = getParents($scope.showItems);\n          var _childs = getChilds($scope.showItems);\n\n          contentTarget.find(itemCls).addClass('hidden');\n\n          $scope.showItems.forEach(function (d) {\n            var value = angular.isObject(d) ? d[$scope.valueKey] + '' : d;\n            var item = contentTarget.find(itemCls + '[data-value=\"' + value + '\"]');\n\n            item.removeClass('hidden');\n          });\n\n          _parents.concat(_childs).forEach(function (d) {\n            contentTarget.find(itemCls + '[data-value=\"' + d + '\"]').removeClass('hidden');\n          });\n        }\n      }\n\n      function getChilds(itemValues) {\n        var childs = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            getChild(d);\n          }\n        });\n\n        function getChild(item) {\n          var sub = item[$scope.subKey];\n          if (sub && sub.length) {\n            sub.forEach(function (d) {\n              childs.push(d[$scope.valueKey] + '');\n              getChild(d);\n            });\n          }\n        }\n        return childs;\n      }\n\n      function getParents(itemValues) {\n        var parents = [];\n        angular.each($scope.newItems, function (d) {\n          if (itemValues.indexOf(d[$scope.valueKey] + '') !== -1) {\n            var item = d;\n            while (item._parent) {\n              parents.push(item._parent[$scope.valueKey] + '');\n              item = item._parent;\n            }\n          }\n        });\n        return parents;\n      }\n\n      function toggleTree(e) {\n        if ($scope.disabled) {\n          return;\n        }\n\n        var target = (0, _jquery2['default'])(e.target);\n        var item = target.parents(itemCls);\n        var to = item.attr('data-to');\n        var froms = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n        var fromChilds = contentTarget.find(itemCls + '[data-from*=\"' + to + '_\"]');\n\n        if (!froms.length) {\n          froms = (0, _jquery2['default'])(_templateWeb2['default'].render(_itemTpl2['default'], {\n            data: subStore[to],\n            textKey: $scope.textKey,\n            valueKey: $scope.valueKey,\n            renderSub: true\n          }));\n          froms.insertAfter(item);\n          bindEvent(froms, item);\n          updateHideShow();\n        } else {\n          froms.toggleClass('hide');\n          fromChilds.toggleClass('child-hide');\n        }\n        target.parent().toggleClass('tree-open');\n      }\n\n      function bindEvent(items, parent) {\n        items.find('.tree-arrow-click').on('click', toggleTree);\n        items.find('input[type=\"checkbox\"]').on('change', function (e) {\n          checkedSub((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-to'), e.target.checked);\n          checkedParent((0, _jquery2['default'])(e.target).parents(itemCls).attr('data-from'), e.target.checked);\n          updateModel();\n        });\n        if (parent) {\n          checkedSub(parent.attr('data-to'), parent.find('input').prop('checked'));\n        }\n        updateDisabled();\n      }\n\n      function updateModel() {\n        // console.log('update model');\n        var newModel = [];\n        var selectedes = contentTarget.find('input:checked');\n\n        selectedes.each(function () {\n          var item = (0, _jquery2['default'])(this).parents(itemCls);\n          var from = item.attr('data-from');\n          var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var parentValue = parent.attr('data-value');\n\n          if (hasParentSelected(item)) {\n            return true;\n          }\n          newModel.push(item.attr('data-value'));\n          return true;\n        });\n\n        $scope.$applyAsync(function () {\n          $scope.model = newModel;\n        });\n      }\n\n      function hasParentSelected(item) {\n        var from = item.attr('data-from');\n        var parent = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n        var ret = false;\n\n        ret = !!(from && parent.length && parent.find('input').prop('checked'));\n\n        if (ret === false && from && parent.attr('data-from')) {\n          ret = hasParentSelected(parent);\n        }\n\n        return ret;\n      }\n\n      function checkedSub(to, checked) {\n        if (to) {\n          var items = contentTarget.find(itemCls + '[data-from=\"' + to + '\"]');\n          var item = contentTarget.find(itemCls + '[data-to=\"' + to + '\"]');\n\n          items.each(function () {\n            if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n              (0, _jquery2['default'])(this).find('input').prop('checked', checked);\n              checkedSub((0, _jquery2['default'])(this).attr('data-to'), checked);\n            }\n          });\n          item.find('.ma-checkbox').removeClass('has-sub');\n        }\n      }\n\n      function checkedParent(from) {\n        if (from) {\n          var items = contentTarget.find(itemCls + '[data-to=\"' + from + '\"]');\n          var maCheckbox = items.find('.ma-checkbox');\n          var data = getSubCheckedCount(from);\n\n          maCheckbox.removeClass('has-sub');\n          if (data.count <= 0) {\n            items.find('input').prop('checked', false);\n            if (data.sub) {\n              maCheckbox.addClass('has-sub');\n            }\n          } else if (data.count >= data.total) {\n            items.find('input').prop('checked', true);\n          } else {\n            items.find('input').prop('checked', false);\n            maCheckbox.addClass('has-sub');\n          }\n\n          checkedParent(items.attr('data-from'));\n        }\n      }\n\n      function getSubCheckedCount(from) {\n        var items = contentTarget.find(itemCls + '[data-from=\"' + from + '\"]');\n        var count = 0;\n        var total = 0;\n        var sub = 0;\n\n        items.each(function () {\n          if (!(0, _jquery2['default'])(this).hasClass('hidden')) {\n            if ((0, _jquery2['default'])(this).find('input').prop('checked')) {\n              count++;\n            }\n            if ((0, _jquery2['default'])(this).find('.ma-checkbox').hasClass('has-sub')) {\n              sub++;\n            }\n            total++;\n          }\n        });\n        return {\n          total: total,\n          count: count,\n          sub: sub\n        };\n      }\n\n      function updateTree(items) {\n        var newItems = [];\n        var subKey = $scope.subKey;\n\n        subStore = {};\n\n        function getSub(items, parentItem, treeLevel) {\n          angular.each(items, function (d) {\n            var item = d;\n\n            newItems.push(item);\n\n            item._level = treeLevel;\n\n            if (item[subKey] && item[subKey].length) {\n              item.tagId = parentItem ? parentItem.tagId + '_' + angular.uuid() : 'tag_' + angular.uuid();\n              item._to = item.tagId;\n              item._sub = true;\n              subStore[item.tagId] = item[subKey];\n              angular.forEach(item[subKey], function (it) {\n                it._parent = item;\n                it._from = item.tagId;\n              });\n              getSub(item[subKey], item, treeLevel + 1);\n            }\n          });\n        }\n        getSub(items, null, 0);\n        return newItems;\n      }\n    }],\n    link: function link(scope, element, attrs, ctrl) {\n      scope.textKey = attrs.maTextKey || 'text';\n      scope.valueKey = attrs.maValueKey || 'value';\n\n      attrs.$observe('maTextKey', function (d) {\n        scope.textKey = d || 'text';\n      });\n      attrs.$observe('maValueKey', function (d) {\n        scope.valueKey = d || 'value';\n      });\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/transfer2/src/treeDirective.js\n// module id = xEAJ\n// module chunks = 17"],"sourceRoot":""}